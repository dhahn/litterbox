@import url(https://fonts.googleapis.com/css?family=Muli);
html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
abbr, address, cite, code,
del, dfn, em, img, ins, kbd, q, samp,
small, strong, sub, sup, var,
b, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

main, article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

html {
  box-sizing: border-box;
  overflow-y: scroll;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility !important;
  -webkit-font-smoothing: antialiased !important; }

body {
  line-height: 1; }

*,
*:before,
*:after {
  position: relative;
  box-sizing: inherit; }
  @media (max-width: 959px) {
    * *,
    *:before *,
    *:after * {
      -webkit-tap-highlight-color: transparent; } }

img,
object,
embed {
  max-width: 100%;
  height: auto; }

blockquote, q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help; }

i,
em {
  font-style: italic; }

b,
strong {
  font-weight: bold; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: inherit;
  font: 100%; }

th {
  font-weight: bold;
  vertical-align: bottom; }

td {
  font-weight: normal;
  vertical-align: top; }

input,
select {
  vertical-align: middle; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

mark {
  background: #ff0;
  color: #000; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  white-space: pre-line;
  word-wrap: break-word; }

pre,
code,
kbd,
samp {
  font-family: monospace, sans-serif; }

/*
 * Returns a color with an optional tone from the map
 *
 * @param {string}  $color_name     The base name of the color
 * @param {tone}    ($tone|'base')  The tone of that color or 'base'
 *
 * @return {string} The matching color's value from the map
 */
@media (max-width: 29.9375em) {
  head {
    font-family: "mq-tiny"; } }

@media (min-width: 30em) {
  head {
    font-family: "mq-mini"; } }

@media (min-width: 37.5em) {
  head {
    font-family: "mq-small"; } }

@media (min-width: 48em) {
  head {
    font-family: "mq-medium"; } }

@media (min-width: 60em) {
  head {
    font-family: "mq-large"; } }

@media (min-width: 76.25em) {
  head {
    font-family: "mq-xlarge"; } }

@media (min-width: 90em) {
  head {
    font-family: "mq-xxlarge"; } }

@media (min-width: 102.5em) {
  head {
    font-family: "mq-xxxlarge"; } }

title {
  font-family: "mq-tiny, mq-mini, mq-small, mq-medium, mq-large, mq-xlarge, mq-xxlarge, mq-xxxlarge"; }

.visually-hidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute; }

header button.pure-menu-link,
header input.pure-menu-link {
  background: transparent;
  outline: none;
  border: 0;
  padding: 0;
  margin: 0;
  font-size: 1em;
  cursor: pointer; }

.cf,
.clear,
.clearfix {
  zoom: 1; }
  .cf:before,
  .clear:before,
  .clearfix:before, .cf:after,
  .clear:after,
  .clearfix:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .cf:after,
  .clear:after,
  .clearfix:after {
    clear: both; }

@font-face {
  font-family: "symbols";
  src: url("public/assets/fonts/symbols/symbols.eot");
  src: url("public/assets/fonts/symbols/symbols.eot?#iefix") format("eot"), url("public/assets/fonts/symbols/symbols.woff") format("woff"), url("public/assets/fonts/symbols/symbols.ttf") format("truetype"), url("public/assets/fonts/symbols/symbols.svg#symbols") format("svg");
  font-weight: normal;
  font-style: normal; }

.symbol:before {
  font-family: "symbols";
  width: 1em;
  margin: 0;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  line-height: 1em;
  speak: none; }

.s-book:before {
  content: "\E001"; }

.s-briefcase:before {
  content: "\E002"; }

.sprite-sample {
  background-image: url("public/assets/images/sprites/sprite-sample.png"); }

@media (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 0.75), (min-resolution: 72dpi) {
  .sprite-sample {
    background-image: url("public/assets/images/sprites/sprite-sample@2x.png");
    background-size: 190px 100px; } }

p,
dl,
address {
  font-size: 1.6rem;
  line-height: 1.5; }

h2 {
  font-size: 1.7rem;
  line-height: 1.64706; }
  @media (min-width: 60em) {
    h2 {
      font-size: 2rem;
      line-height: 1.65; } }

.sec-info h2 {
  font-size: 2rem;
  line-height: 1.45; }
  @media (min-width: 48em) {
    .sec-info h2 {
      font-size: 2.5rem;
      line-height: 1.44; } }

.sec-hero h1 {
  font-size: 3.1rem;
  line-height: 1.45161; }
  @media (min-width: 48em) {
    .sec-hero h1 {
      font-size: 3.9rem;
      line-height: 1.46154; } }

::-moz-selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

::selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

html {
  font-size: 62.5%; }

body {
  background: #fff;
  color: #2C3E50;
  font-family: "Muli", sans-serif;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004); }

a {
  color: #2C3E50;
  text-decoration: none; }
  a:hover, a:focus {
    color: #999; }
  a:focus {
    outline: none; }

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1; }

h2 {
  margin-bottom: 2rem; }

p,
li,
dt,
dd {
  font-weight: normal;
  font-style: normal; }

li {
  line-height: 1; }

header {
  height: 5rem;
  margin: 3rem;
  color: #bbb; }
  .static_pages-index header,
  .registrations-new header,
  .sessions-new header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 10; }
    .static_pages-index header .home-link,
    .registrations-new header .home-link,
    .sessions-new header .home-link {
      text-shadow: 0 2px 3px rgba(0, 0, 0, 0.5); }
      .static_pages-index header .home-link:hover,
      .registrations-new header .home-link:hover,
      .sessions-new header .home-link:hover {
        background-color: transparent; }
  .static_pages-index header {
    color: #fff;
    text-shadow: 0 2px 3px rgba(0, 0, 0, 0.5); }
    .static_pages-index header a,
    .static_pages-index header .pure-menu-link {
      color: #fff;
      text-shadow: 0 2px 3px rgba(0, 0, 0, 0.5); }
      .static_pages-index header a:hover,
      .static_pages-index header .pure-menu-link:hover {
        background-color: rgba(255, 255, 255, 0.1);
        color: #eee; }
  header button.pure-menu-link,
  header input.pure-menu-link {
    padding: 0.5em 1em; }
  header h1 {
    float: left;
    width: 50%; }
  header .pure-menu {
    float: right;
    width: 50%;
    text-align: right; }
  header .home-link {
    display: inline-block;
    padding: 1rem;
    font-size: 125%;
    text-shadow: none;
    color: #1CB841; }
    header .home-link:hover {
      background-color: #eee; }

footer {
  margin: 5rem 2rem; }
  footer .container {
    margin: 0 auto;
    max-width: 98rem; }
  footer .pure-menu {
    margin-bottom: 20px; }

section {
  padding: 5rem 0; }
  section.centered {
    margin: 0 auto;
    max-width: 98rem; }

.search-bar {
  padding: 2rem 0;
  background-color: rgba(0, 0, 0, 0.25);
  color: #333;
  text-align: center; }
  .search-bar .location {
    width: 30%; }
  .search-bar input,
  .search-bar select {
    width: 10%; }
  .search-bar button {
    width: 15%; }

.sec-hero {
  padding: 0;
  background-color: #bbb;
  background-image: url(http://lorempixel.com/900/400/cats/);
  background-size: cover;
  background-position: 50% 50%;
  color: #fff;
  text-align: center; }
  .sec-hero .headline {
    padding: 7rem 0; }
  .sec-hero h1 {
    margin: 7rem 0;
    text-shadow: 0 2px 3px rgba(0, 0, 0, 0.5); }
  .sec-hero .faq-button {
    font-size: 125%; }
    .sec-hero .faq-button:hover {
      color: #fff; }

.sec-info .left {
  padding: 4rem;
  background-color: #eee; }

.sec-info .right {
  padding: 2rem;
  background-image: url(http://lorempixel.com/500/200/cats/);
  background-size: cover;
  background-position: 50% 50%; }

.sec-info h2 {
  margin-bottom: 2rem; }

.sec-info .cta {
  margin-top: 2rem;
  text-align: center; }
  .sec-info .cta .pure-button {
    font-size: 125%; }

.sidebar-container {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(100, 100, 100, 0.3);
  opacity: 0.5;
  z-index: 50;
  -webkit-transform: translateX(-100%);
      -ms-transform: translateX(-100%);
          transform: translateX(-100%); }
  body.sidebar-open .sidebar-container {
    -webkit-transform: translateX(0%);
        -ms-transform: translateX(0%);
            transform: translateX(0%); }
  .sidebar-container .sidebar {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    -webkit-transform: translateX(-100%);
        -ms-transform: translateX(-100%);
            transform: translateX(-100%); }

.page-content {
  -webkit-transition: -webkit-filter 1s ease-in-out, filter 1s ease-in-out;
          transition: filter 1s ease-in-out; }
  body.sidebar-open .page-content {
    -webkit-filter: blur(5px);
            filter: blur(5px); }

.sidebar {
  width: 30%;
  padding: 10rem 6rem;
  background-color: #2980b9;
  color: #fff; }
  .sidebar.animated {
    box-shadow: 0.3rem 0rem 2rem rgba(0, 0, 0, 0.5); }
  .sidebar fieldset {
    margin-bottom: 1rem; }
  .sidebar label.stacked {
    display: block;
    margin-bottom: 1rem; }
  .sidebar .pure-button {
    background-color: #1CB841; }
  .sidebar input[type="email"],
  .sidebar input[type="password"] {
    width: 100%;
    color: #333; }
  .sidebar .pure-form {
    margin-bottom: 4rem; }
  .sidebar .login-links a {
    display: block;
    margin-bottom: 1rem;
    color: #fff; }
    .sidebar .login-links a:hover {
      color: #1cb841; }

/*# sourceMappingURL=data:application/json;base64, */
