html, body, div, span, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
abbr, address, cite, code,
del, dfn, em, img, ins, kbd, q, samp,
small, strong, sub, sup, var,
b, i,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure,
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

main, article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

html {
  box-sizing: border-box;
  overflow-y: scroll;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  text-rendering: optimizeLegibility !important;
  -webkit-font-smoothing: antialiased !important; }

body {
  line-height: 1; }

*,
*:before,
*:after {
  position: relative;
  box-sizing: inherit; }
  @media (max-width: 959px) {
    * *,
    *:before *,
    *:after * {
      -webkit-tap-highlight-color: transparent; } }

img,
object,
embed {
  max-width: 100%;
  height: auto; }

blockquote, q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help; }

i,
em {
  font-style: italic; }

b,
strong {
  font-weight: bold; }

q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: inherit;
  font: 100%; }

th {
  font-weight: bold;
  vertical-align: bottom; }

td {
  font-weight: normal;
  vertical-align: top; }

input,
select {
  vertical-align: middle; }

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

mark {
  background: #ff0;
  color: #000; }

pre {
  white-space: pre;
  white-space: pre-wrap;
  white-space: pre-line;
  word-wrap: break-word; }

pre,
code,
kbd,
samp {
  font-family: monospace, sans-serif; }

/*
 * Returns a color with an optional tone from the map
 *
 * @param {string}  $color_name     The base name of the color
 * @param {tone}    ($tone|'base')  The tone of that color or 'base'
 *
 * @return {string} The matching color's value from the map
 */
head {
  font-family: "mq-tiny";
  font-family: "mq-mini";
  font-family: "mq-small";
  font-family: "mq-medium";
  font-family: "mq-large";
  font-family: "mq-xlarge";
  font-family: "mq-xxlarge";
  font-family: "mq-xxxlarge"; }

title {
  font-family: "mq-tiny, mq-mini, mq-small, mq-medium, mq-large, mq-xlarge, mq-xxlarge, mq-xxxlarge"; }

.browse-happy p {
  display: block;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.visually-hidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute; }

input[type="submit"] {
  background: transparent;
  outline: none;
  border: 0;
  padding: 0;
  margin: 0;
  font-size: 1em;
  cursor: pointer; }

.cf,
.clear,
.clearfix {
  zoom: 1; }
  .cf:before,
  .clear:before,
  .clearfix:before, .cf:after,
  .clear:after,
  .clearfix:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .cf:after,
  .clear:after,
  .clearfix:after {
    clear: both; }

@font-face {
  font-family: "symbols";
  src: url("public/assets/fonts/symbols/symbols.eot");
  src: url("public/assets/fonts/symbols/symbols.eot?#iefix") format("eot"), url("public/assets/fonts/symbols/symbols.woff") format("woff"), url("public/assets/fonts/symbols/symbols.ttf") format("truetype"), url("public/assets/fonts/symbols/symbols.svg#symbols") format("svg");
  font-weight: normal;
  font-style: normal; }

.sample-symbols .symbol-one:before, .sample-symbols .symbol-two:before {
  font-family: "symbols";
  width: 1em;
  margin: 0;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  line-height: 1em;
  speak: none; }

.symbol:before {
  font-family: "symbols";
  width: 1em;
  margin: 0;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  line-height: 1em;
  speak: none; }

.s-book:before {
  content: "\E001"; }

.s-briefcase:before {
  content: "\E002"; }

.sprite-sample, .sample-sprites .icon-one:before, .sample-sprites .icon-two:before {
  background-image: url("public/assets/images/sprites/sprite-sample.png"); }

@media (-webkit-min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 0.75), (min-resolution: 72dpi) {
  .sprite-sample, .sample-sprites .icon-one:before, .sample-sprites .icon-two:before {
    background-image: url("public/assets/images/sprites/sprite-sample@2x.png");
    background-size: 190px 100px; } }

.wysiwyg p, .wysiwyg li, p,
dl,
address {
  font-size: 1.6rem;
  line-height: 1.5; }

.grid-samples h4 {
  font-size: 2rem;
  line-height: 1.45; }

.wysiwyg h5, .wysiwyg h6 {
  font-size: 2rem;
  line-height: 1.45;
  font-size: 2.5rem;
  line-height: 1.44; }

.wysiwyg h3, .wysiwyg h4, .grid-samples h2 {
  font-size: 2.5rem;
  line-height: 1.44;
  font-size: 3.1rem;
  line-height: 1.45161; }

.wysiwyg h1, .wysiwyg h2 {
  font-size: 3.1rem;
  line-height: 1.45161;
  font-size: 3.9rem;
  line-height: 1.46154; }

.wysiwyg h1, .wysiwyg h2 {
  font-weight: 300; }

.wysiwyg h3, .wysiwyg h4 {
  font-weight: 400; }

.wysiwyg h5, .wysiwyg h6 {
  font-weight: 700; }

.wysiwyg a {
  color: #E74C3C; }

.wysiwyg p, .wysiwyg ul, .wysiwyg ol {
  margin-bottom: 3rem; }

.wysiwyg ul, .wysiwyg ol {
  margin-left: 3rem; }

::-moz-selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

::selection {
  background: #777;
  color: #fff;
  text-shadow: none; }

html {
  font-size: 62.5%; }

body {
  background: #fff;
  color: #2C3E50;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-weight: normal;
  font-size: 16px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.004); }

a {
  color: #2C3E50;
  text-decoration: none; }
  a:hover, a:focus {
    color: #999; }
  a:focus {
    outline: none; }

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1; }
  h1 a,
  h2 a,
  h3 a,
  h4 a,
  h5 a,
  h6 a {
    color: #000; }

p,
li,
dt,
dd {
  font-weight: normal;
  font-style: normal; }

li {
  line-height: 1; }

input,
textarea,
select {
  outline: none;
  border-radius: 0;
  border: 0.1rem solid #eee;
  padding: 0.5rem 1rem;
  margin: 0;
  width: 100%;
  font-size: 1.3rem; }

input,
textarea,
label {
  color: #eee; }

select {
  background: #fff;
  height: 3rem;
  padding: 0.5rem 1rem; }

input[type=search] {
  -webkit-appearance: textfield; }
  input[type=search]::-webkit-search-cancel-button, input[type=search]::-webkit-search-decoration, input[type=search]::-webkit-search-results-button, input[type=search]::-webkit-search-results-decoration {
    -webkit-appearance: none; }

select[multiple] {
  height: auto; }

input[type="checkbox"] {
  vertical-align: bottom; }

input[type="radio"] {
  vertical-align: text-bottom; }

label {
  font-weight: 400; }

input:focus,
textarea:focus {
  outline: none;
  border-color: #eee;
  color: #000; }

input[type="submit"] {
  border-radius: 0;
  height: auto; }

.placeholder {
  color: #000; }

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
  color: #000; }

input:-moz-placeholder,
textarea:-moz-placeholder {
  color: #000; }

input::-moz-placeholder,
textarea::-moz-placeholder {
  color: #000; }

input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: #000; }

input:focus::-webkit-input-placeholder,
textarea:focus::-webkit-input-placeholder {
  color: blue; }

input:focus:-moz-placeholder,
textarea:focus:-moz-placeholder {
  color: blue; }

input:focus::-moz-placeholder,
textarea:focus::-moz-placeholder {
  color: blue; }

input:focus:-ms-input-placeholder,
textarea:focus:-ms-input-placeholder {
  color: blue; }

button::-moz-focus-inner {
  padding: 0;
  border: 0; }

input[type=number]::-webkit-inner-spin-button,
input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0; }

input[type=number] {
  -moz-appearance: textfield; }

input[type="text"],
input[type="time"],
input[type="url"],
input[type="email"],
input[type="password"],
input[type="button"],
input[type="submit"],
textarea {
  -webkit-appearance: none;
  -moz-appearance: none; }

.browse-happy {
  background-color: transparent;
  background-color: rgba(119, 119, 119, 0.97);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#F7777777,endColorstr=#F7777777);
  zoom: 1;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 800; }
  .browse-happy p {
    display: block;
    width: 800px;
    height: 200px;
    font-size: 2em;
    line-height: 1.3em;
    text-align: center;
    color: #fff; }
    .browse-happy p a {
      display: inline-block;
      color: #59b6fd;
      line-height: 1em;
      border-bottom: 1px solid rgba(89, 182, 253, 0.2); }
      .browse-happy p a:hover {
        color: rgba(89, 182, 253, 0.8); }

.sample-header {
  text-align: center;
  font-family: 'Open Sans', sans-serif;
  font-weight: 300;
  font-size: 4rem;
  text-transform: uppercase;
  padding: 3rem;
  margin-bottom: 5rem;
  color: #E74C3C; }
  .sample-header h1 {
    font-weight: inherit; }

.col-wrap {
  zoom: 1;
  width: 100%;
  max-width: 70rem;
  margin: 0 auto; }
  .col-wrap:before, .col-wrap:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden; }
  .col-wrap:after {
    clear: both; }
  .col-wrap .wysiwyg {
    padding: 0 1rem; }

.sample-sprites,
.sample-symbols {
  float: left;
  width: calc(100% - 20px);
  float: left;
  max-width: 600px;
  margin: 0 1rem 4rem;
  padding: 0 4rem 4rem;
  border: 1px solid rgba(44, 62, 80, 0.2);
  border-radius: 0.5rem;
  overflow: hidden;
  width: calc(50% - 20px);
  margin: 0 1rem 4rem; }
  .sample-sprites h2,
  .sample-symbols h2 {
    display: inline-block;
    width: calc(100% + 80px);
    left: -4rem;
    padding: 1rem 4rem;
    background: #2C3E50;
    color: #fff;
    font-family: 'Open Sans', sans-serif;
    font-weight: 700;
    font-size: 1.6rem;
    margin-bottom: 4rem; }
  .sample-sprites i,
  .sample-symbols i {
    display: block;
    margin-bottom: 3rem; }
    .sample-sprites i:last-of-type,
    .sample-symbols i:last-of-type {
      margin-bottom: 0; }

.sample-sprites .icon-one:before {
  content: "";
  background-position: 0px 0px;
  background-repeat: no-repeat;
  overflow: hidden;
  display: block;
  width: 100px;
  height: 100px; }

.sample-sprites .icon-two:before {
  content: "";
  background-position: -100px 0px;
  background-repeat: no-repeat;
  overflow: hidden;
  display: block;
  width: 90px;
  height: 74px; }

.sample-symbols .symbol-one {
  font-size: 3rem; }
  .sample-symbols .symbol-one:before {
    content: '\E001'; }

.sample-symbols .symbol-two {
  font-size: 3rem; }
  .sample-symbols .symbol-two:before {
    content: '\E002';
    color: #3498DB; }

.grid-samples code {
  display: block; }

.grid-samples h2 {
  text-align: center;
  margin-bottom: 2rem; }

.grid-samples h4 {
  text-align: center;
  margin-bottom: 2rem; }

.grid-samples .row > code {
  text-align: center;
  padding: 2rem; }

.grid-samples .row {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  background: rgba(44, 62, 80, 0.1);
  padding: 0 2rem;
  margin-bottom: 5rem; }
  .grid-samples .row:after {
    content: " ";
    display: block;
    clear: both; }

.grid-samples div,
.grid-samples aside,
.grid-samples article {
  background: rgba(44, 62, 80, 0.4);
  padding: 2rem;
  margin-bottom: 2rem;
  color: #fff; }

.grid-basic div {
  width: 48.97959%;
  float: left;
  margin-right: 2.04082%; }
  .grid-basic div:first-child {
    width: 48.97959%;
    float: left;
    margin-right: 2.04082%; }
  .grid-basic div:last-child {
    width: 48.97959%;
    float: right;
    margin-right: 0; }

.grid-multiple div {
  float: left; }

.grid-multiple .item-1 {
  width: 6.77966%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-2 {
  width: 91.52542%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-3 {
  width: 15.25424%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-4 {
  width: 83.05085%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-5 {
  width: 23.72881%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-6 {
  width: 74.57627%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-7 {
  width: 32.20339%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-8 {
  width: 66.10169%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-9 {
  width: 40.67797%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-10 {
  width: 57.62712%;
  float: right;
  margin-right: 0; }

.grid-multiple .item-11 {
  width: 49.15254%;
  float: left;
  margin-right: 1.69492%; }

.grid-multiple .item-12 {
  width: 49.15254%;
  float: right;
  margin-right: 0; }

.grid-nested .item-1 {
  width: 31.81818%;
  float: left;
  margin-right: 2.27273%; }

.grid-nested .item-2 {
  width: 65.90909%;
  float: right;
  margin-right: 0; }
  .grid-nested .item-2 > code {
    margin-bottom: 2rem;
    text-align: center; }

.grid-nested aside,
.grid-nested article {
  margin-bottom: 0; }

.grid-nested aside {
  width: 48.71795%;
  float: left;
  margin-right: 2.5641%; }

.grid-nested article {
  width: 48.71795%;
  float: right;
  margin-right: 0; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhc2UvX3Jlc2V0LnNjc3MiLCJzZXR0aW5ncy9fY29sb3JzLnNjc3MiLCJ1dGlscy9taXhpbnMvX2pzLWJyZWFrcG9pbnRzLnNjc3MiLCJjb21wb25lbnRzL19icm93c2UtaGFwcHkuc2NzcyIsInV0aWxzL191dGlsaXRpZXMuc2NzcyIsImJhc2UvX2Zvcm1zLnNjc3MiLCJ1dGlscy9fc3ltYm9scy5zY3NzIiwicGFnZXMvX3NhbXBsZS1wYWdlLnNjc3MiLCJ1dGlscy9fc3ByaXRlcy5zY3NzIiwiYmFzZS9fZGVmYXVsdHMuc2NzcyIsInV0aWxzL19leHRlbmRzLnNjc3MiLCJ1dGlscy9taXhpbnMvX3R5cGUuc2NzcyIsInV0aWxzL2Z1bmN0aW9ucy9fdW5pdHMuc2NzcyIsInV0aWxzL19mb250cy5zY3NzIiwic2V0dGluZ3MvX29wdGlvbnMuc2NzcyIsInV0aWxzL21peGlucy9fcGxhY2Vob2xkZXIuc2NzcyIsImJhc2Uvc3VzeS1ncmlkL3N1c3kvb3V0cHV0L3N1cHBvcnQvX3JlbS5zY3NzIiwiYmFzZS9zdXN5LWdyaWQvc3VzeS9sYW5ndWFnZS9zdXN5L19jb250YWluZXIuc2NzcyIsImJhc2Uvc3VzeS1ncmlkL3N1c3kvb3V0cHV0L3N1cHBvcnQvX2NsZWFyZml4LnNjc3MiLCJiYXNlL3N1c3ktZ3JpZC9zdXN5L2xhbmd1YWdlL3N1c3kvX3NwYW4uc2NzcyIsImJhc2Uvc3VzeS1ncmlkL3N1c3kvb3V0cHV0L3NoYXJlZC9fZGlyZWN0aW9uLnNjc3MiLCJiYXNlL3N1c3ktZ3JpZC9zdXN5L2xhbmd1YWdlL3N1c3kvX2d1dHRlcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFZQSxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLE1BQU07QUFDckMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLFVBQVUsRUFBRSxHQUFH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R0FDWjs7QUFHRCxLQUFLLENBQUEsSUFBQyxDQUFLLFFBQUwsQUFBYSxFQUFFO0VBRXBCLGFBQWEsRUFBRSxDQUFFO0VBQ2pCLE1BQU0sRUFBRSxJQUFLLEdBQ2I7O0FBTUQsWUFBWSxDQUFDO0VBQ1osS0FBSyxFQUFFLElBQUssR0FDWjs7QUFFRCxLVWxGRSxBVmtGRywyQlVsRndCO0FWbUY3QixRVW5GRSxBVm1GTSwyQlVuRnFCLENBQUM7RVZxRjVCLEtBQUssRUFBRSxJQUFLLEdVbkZaOztBVmdGRixLVS9FRSxBVitFRyxpQlUvRWM7QVZnRm5CLFFVaEZFLEFWZ0ZNLGlCVWhGVyxDQUFDO0VWa0ZsQixLQUFLLEVBQUUsSUFBSyxHVWhGWjs7QVY2RUYsS1U1RUUsQVY0RUcsa0JVNUVlO0FWNkVwQixRVTdFRSxBVjZFTSxrQlU3RVksQ0FBQztFVitFbkIsS0FBSyxFQUFFLElBQUssR1U3RVo7O0FWMEVGLEtVekVFLEFWeUVHLHNCVXpFbUI7QVYwRXhCLFFVMUVFLEFWMEVNLHNCVTFFZ0IsQ0FBQztFVjRFdkIsS0FBSyxFQUFFLElBQUssR1UxRVo7O0FWOEVGLEtBQUssTVV6RkgsQVZ5RlMsMkJVekZrQjtBVjBGN0IsUUFBUSxNVTFGTixBVjBGWSwyQlUxRmUsQ0FBQztFVjRGNUIsS0FBSyxFQUFFLElBQUssR1UxRlo7O0FWdUZGLEtBQUssTVV0RkgsQVZzRlMsaUJVdEZRO0FWdUZuQixRQUFRLE1VdkZOLEFWdUZZLGlCVXZGSyxDQUFDO0VWeUZsQixLQUFLLEVBQUUsSUFBSyxHVXZGWjs7QVZvRkYsS0FBSyxNVW5GSCxBVm1GUyxrQlVuRlM7QVZvRnBCLFFBQVEsTVVwRk4sQVZvRlksa0JVcEZNLENBQUM7RVZzRm5CLEtBQUssRUFBRSxJQUFLLEdVcEZaOztBVmlGRixLQUFLLE1VaEZILEFWZ0ZTLHNCVWhGYTtBVmlGeEIsUUFBUSxNVWpGTixBVmlGWSxzQlVqRlUsQ0FBQztFVm1GdkIsS0FBSyxFQUFFLElBQUssR1VqRlo7O0FWMkZGLE1BQU0sa0JBQWtCLENBQUM7RUFDeEIsT0FBTyxFQUFFLENB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VTtFSHhJcEIsS0FBUSxFSUEwRCxLQUFLO0VKQXZFLFlBQVEsRUdrRlcsQ0FBQyxHWmlHdEI7O0FBakNGLGNBQWMsQ0FrQ2IsUUFBUSxDQUFDO0VTcExOLEtBQVEsRUd3SUUsU0FBVTtFSHhJcEIsS0FBUSxFSUFnRCxJQUFJO0VKQTVELFlBQVEsRUs0RE0sUUFBVSxHZDBIMUI7O0FBcENGLGNBQWMsQ0FxQ2IsUUFBUSxDQUFDO0VTdkxOLEtBQVEsRUd3SUUsU0FBVTtFSHhJcEIsS0FBUSxFSUEwRCxLQUFLO0VKQXZFLFlBQVEsRUdrRlcsQ0FBQyxHWnVHdEI7O0FBSUYsWUFBWSxDQUNYLE9BQU8sQ0FBQztFUzlMTCxLQUFRLEVHd0lFLFNBQVU7RUh4SXBCLEtBQVEsRUlBZ0QsSUFBSTtFSkE1RCxZQUFRLEVLNERNLFFBQVUsR2RvSTFCOztBQUhGLFlBQVksQ0FJWCxPQUFPLENBQUM7RVNqTUwsS0FBUSxFR3dJRSxTQUFVO0VIeElwQixLQUFRLEVJQTBELEtBQUs7RUpBdkUsWUFBUSxFR2tGVyxDQUFDLEdacUh0QjtFQVZGLFlBQVksQ0FJWCxPQUFPLEdBRUosSUFBSSxDQUFDO0lBQ04sYUFBYSxFS3RMb0IsSUFBeUI7SUx1TDFELFVBQVUsRUFBRSxNQUFPLEdBQ25COztBQVRILFlBQVksQ0FXWCxLQUFLO0FBWE4sWUFBWSxDQVlYLE9BQU8sQ0FBQztFQUNQLGFBQWEsRUFBRSxDQUFFLEdBQ2pCOztBQWRGLFlBQVksQ0FlWCxLQUFLLENBQUM7RVM1TUgsS0FBUSxFR3dJRSxTQUFVO0VIeElwQixLQUFRLEVJQWdELElBQUk7RUpBNUQsWUFBUSxFSzRETSxPQUFVLEdka0oxQjs7QUFqQkYsWUFBWSxDQWtCWCxPQUFPLENBQUM7RVMvTUwsS0FBUSxFR3dJRSxTQUFVO0VIeElwQixLQUFRLEVJQTBELEtBQUs7RUpBdkUsWUFBUSxFR2tGVyxDQUFDLEdaK0h0QiIsImZpbGUiOiJwcmludC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gUmVzZXRcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBIVE1MNSBSZXNldFxuLy8gV2UgaGF2ZSBsZWFybmVkIG11Y2ggZnJvbS9iZWVuIGluc3BpcmVkIGJ5L3Rha2VuIGNvZGUgd2hlcmUgb2ZmZXJlZCBmcm9tOlxuLy8gRXJpYyBNZXllciAgICAgICAgICAgICAgICAgIDo6IGh0dHA6Ly9tZXllcndlYi5jb21cbi8vIEhUTUw1IERvY3RvciAgICAgICAgICAgICAgICA6OiBodHRwOi8vaHRtbDVkb2N0b3IuY29tXG4vLyBhbmQgdGhlIEhUTUw1IEJvaWxlcnBsYXRlICAgOjogaHR0cDovL2h0bWw1Ym9pbGVycGxhdGUuY29tXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIG9iamVjdCwgaWZyYW1lLFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxuYWJiciwgYWRkcmVzcywgY2l0ZSwgY29kZSxcbmRlbCwgZGZuLCBlbSwgaW1nLCBpbnMsIGtiZCwgcSwgc2FtcCxcbnNtYWxsLCBzdHJvbmcsIHN1Yiwgc3VwLCB2YXIsXG5iLCBpLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24sIHN1bW1hcnksXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG5cdGJvcmRlcjogMDtcblx0b3V0bGluZTogMDtcblx0Zm9udC1zaXplOiAxMDAlO1xuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG5cdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG5tYWluLCBhcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcblx0ZGlzcGxheTogYmxvY2s7XG59XG5cbmh0bWwge1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRvdmVyZmxvdy15OiBzY3JvbGw7XG5cdC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuXHQtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG5cdHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHkgIWltcG9ydGFudDtcblx0LXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQgIWltcG9ydGFudDtcbn1cblxuYm9keSB7XG5cdGxpbmUtaGVpZ2h0OiAxO1xufVxuXG4qLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRib3gtc2l6aW5nOiBpbmhlcml0O1xuXG5cdC8vIEhpZGUgdGFwIG9uIHRvdWNoIGRldmljZXMuXG5cdEBtZWRpYSAobWF4LXdpZHRoIDogOTU5cHgpIHtcblx0XHQqIHtcblx0XHRcdC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwKTtcblx0XHR9XG5cdH1cbn1cblxuaW1nLFxub2JqZWN0LFxuZW1iZWQge1xuXHRtYXgtd2lkdGg6IDEwMCU7XG5cdGhlaWdodDogYXV0bztcbn1cblxuYmxvY2txdW90ZSwgcSB7XG5cdHF1b3Rlczpub25lO1xufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSxcbmJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSxcbnE6YWZ0ZXIge1xuXHRjb250ZW50OiAnJztcblx0Y29udGVudDogbm9uZTtcbn1cblxuYSB7XG5cdG1hcmdpbjogMDtcblx0cGFkZGluZzogMDtcblx0Zm9udC1zaXplOiAxMDAlO1xuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG5cdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG5kZWwge1xuXHR0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbn1cblxuYWJiclt0aXRsZV0sIGRmblt0aXRsZV0ge1xuXHRib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xuXHRjdXJzb3I6IGhlbHA7XG59XG5cbmksXG5lbSB7XG5cdGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuYixcbnN0cm9uZyB7XG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG5xIHtcblx0XHRxdW90ZXM6IFwiXFwyMDFDXCIgXCJcXDIwMURcIiBcIlxcMjAxOFwiIFwiXFwyMDE5XCI7XG59XG5cbnRhYmxlIHtcblx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0Ym9yZGVyLXNwYWNpbmc6IDA7XG5cdGZvbnQtc2l6ZTogaW5oZXJpdDtcblx0Zm9udDogMTAwJTtcbn1cblxudGgge1xuXHRmb250LXdlaWdodDogYm9sZDtcblx0dmVydGljYWwtYWxpZ246IGJvdHRvbTtcbn1cblxudGQge1xuXHRmb250LXdlaWdodDogbm9ybWFsO1xuXHR2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG5pbnB1dCxcbnNlbGVjdCB7XG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG5cbmZpZWxkc2V0IHtcblx0XHRib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuXHRcdG1hcmdpbjogMCAycHg7XG5cdFx0cGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtO1xufVxuXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcblx0XHRmb250LWZhbWlseTogaW5oZXJpdDtcblx0XHRmb250LXNpemU6IDEwMCU7XG5cdFx0bWFyZ2luOiAwO1xufVxuXG5zdWIsXG5zdXAge1xuXHRmb250LXNpemU6IDc1JTtcblx0bGluZS1oZWlnaHQ6IDA7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuc3VwIHtcblx0dG9wOiAtMC41ZW07XG59XG5cbnN1YiB7XG5cdGJvdHRvbTogLTAuMjVlbTtcbn1cblxubWFyayB7XG5cdFx0YmFja2dyb3VuZDogI2ZmMDtcblx0XHRjb2xvcjogIzAwMDtcbn1cblxucHJlIHtcblx0d2hpdGUtc3BhY2U6IHByZTtcblx0d2hpdGUtc3BhY2U6IHByZS13cmFwO1xuXHR3aGl0ZS1zcGFjZTogcHJlLWxpbmU7XG5cdHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cblxucHJlLFxuY29kZSxcbmtiZCxcbnNhbXAge1xuXHRmb250LWZhbWlseTogbW9ub3NwYWNlLFxuXHRzYW5zLXNlcmlmO1xufVxuIiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIENvbG9yc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENvbG9yIE1hcFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGNvbG9yczogKFxuXHRibGFjazogIzJDM0U1MCxcblx0d2hpdGU6ICNmZmYsXG5cdGdyYXk6IChcblx0XHRiYXNlOiAjOTk5LFxuXHRcdGxpZ2h0OiAjY2NjLFxuXHRcdGRhcms6ICMzMzNcblx0KSxcblx0dGVhbDogKFxuXHRcdGJhc2U6ICMxMzkzOTcsXG5cdFx0bGlnaHQ6ICMzM2FmYjMsXG5cdFx0ZGFyazogIzI2NGQ0ZVxuXHQpXG4pO1xuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBzZXRjb2xvcigpIEZ1bmN0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vKlxuICogUmV0dXJucyBhIGNvbG9yIHdpdGggYW4gb3B0aW9uYWwgdG9uZSBmcm9tIHRoZSBtYXBcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gICRjb2xvcl9uYW1lICAgICBUaGUgYmFzZSBuYW1lIG9mIHRoZSBjb2xvclxuICogQHBhcmFtIHt0b25lfSAgICAoJHRvbmV8J2Jhc2UnKSAgVGhlIHRvbmUgb2YgdGhhdCBjb2xvciBvciAnYmFzZSdcbiAqXG4gKiBAcmV0dXJuIHtzdHJpbmd9IFRoZSBtYXRjaGluZyBjb2xvcidzIHZhbHVlIGZyb20gdGhlIG1hcFxuICovXG5cbkBmdW5jdGlvbiBzZXRjb2xvcigkY29sb3JfbmFtZSwgJHRvbmU6IGJhc2UpIHtcblx0QGlmIG1hcC1oYXMta2V5KCRjb2xvcnMsICRjb2xvcl9uYW1lKSB7XG5cdFx0JG1hcF9jb2xvcl9uYW1lOiBtYXAtZ2V0KCRjb2xvcnMsICRjb2xvcl9uYW1lKTtcblx0XHRAaWYgKGxlbmd0aCgkbWFwX2NvbG9yX25hbWUpID4gMSkgeyAvKiBUaGlzIG11c3QgYmUgYSBtYXAgKi9cblx0XHRcdEByZXR1cm4gbWFwLWdldCgkbWFwX2NvbG9yX25hbWUsICR0b25lKTtcblx0XHR9IEBlbHNlIHsgLyogSXQncyBqdXN0IGEgc2luZ2xlIGNvbG9yICovXG5cdFx0XHRAcmV0dXJuICRtYXBfY29sb3JfbmFtZTtcblx0XHR9XG5cdH0gQGVsc2Uge1xuXHRcdEB3YXJuIFwiQ291bGRuJ3QgZmluZCBhIGNvbG9yIG5hbWVkIGAjeyRjb2xvcl9uYW1lfWAuXCI7XG5cdH1cbn1cbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBKYXZhc2NyaXB0IEJyZWFrcG9pbnRzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBEbyBubyBlZGl0IHVubGVzcyB5b3Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuXG5cbiRwdWJsaWNfYnJlYWtwb2ludHM6IChcbiAgJ21xLXRpbnknOiAgICAgICdtYXgtdGlueScsXG4gICdtcS1taW5pJzogICAgICAnbWluaScsXG4gICdtcS1zbWFsbCc6ICAgICAnc21hbGwnLFxuICAnbXEtbWVkaXVtJzogICAgJ21lZGl1bScsXG4gICdtcS1sYXJnZSc6ICAgICAnbGFyZ2UnLFxuICAnbXEteGxhcmdlJzogICAgJ3hsYXJnZScsXG4gICdtcS14eGxhcmdlJzogICAneHhsYXJnZScsXG4gICdtcS14eHhsYXJnZSc6ICAneHh4bGFyZ2UnXG4pO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU2V0dXAgbWl4aW5zXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBUZWxscyBTYXNzUXdhdGNoIHRoZSBuYW1lcyBvZiBvdXIgYnJlYWtwb2ludHNcbkBtaXhpbiBleHBvc2UtYnJlYWtwb2ludC1uYW1lcygkYnJlYWtwb2ludHMpIHtcbiAgQGVhY2ggJHB1YmxpYywgJG1xIGluICRicmVha3BvaW50cyB7XG4gICAgQGluY2x1ZGUgbXEoJG1xKSB7XG4gICAgICBmb250LWZhbWlseTogJHB1YmxpYztcbiAgICB9XG4gIH1cbn1cblxuLy8gVGVsbHMgU2Fzc1F3YXRjaCB0aGUgb3JkZXIgb2Ygb3VyIGJyZWFrcG9pbnRzXG5AbWl4aW4gZXhwb3NlLWJyZWFrcG9pbnQtb3JkZXIoJGJyZWFrcG9pbnRzKSB7XG4gICRsZW5ndGg6IGxlbmd0aCgkYnJlYWtwb2ludHMpO1xuICAkbGlzdDogJyc7XG4gICRpOiAxO1xuXG4gIEBlYWNoICRicmVha3BvaW50LCAkcXVlcnkgaW4gJGJyZWFrcG9pbnRzIHtcbiAgICAkbGlzdDogJGxpc3QgKyAkYnJlYWtwb2ludDtcblxuICAgIEBpZiAkaSAhPSAkbGVuZ3RoIHtcbiAgICAgICRsaXN0OiAkbGlzdCArICcsICc7XG4gICAgfVxuXG4gICAgJGk6ICRpICsgMTtcbiAgfVxuICBmb250LWZhbWlseTogJGxpc3Q7XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBFeHBvc2UgdGhlIGJyZWFrcG9pbnRzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuaGVhZCB7XG4gIEBpbmNsdWRlIGV4cG9zZS1icmVha3BvaW50LW5hbWVzKCRwdWJsaWNfYnJlYWtwb2ludHMpO1xufVxuXG50aXRsZSB7XG4gIEBpbmNsdWRlIGV4cG9zZS1icmVha3BvaW50LW9yZGVyKCRwdWJsaWNfYnJlYWtwb2ludHMpO1xufSIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCcm93c2UgSGFwcHlcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIEFkZCB0aGUgZm9sbG93aW5nIHJpZ2h0IGFmdGVyIHlvdXIgYm9keSBjbGFzcyFcblxuLy8gPCEtLVtpZiBJRSA4XT5cbi8vIFx0PGRpdiBjbGFzcz1cImJyb3dzZS1oYXBweVwiPlxuLy8gXHQgIDxwPllvdSBhcmUgdXNpbmcgYW4gPHN0cm9uZz5vdXRkYXRlZDwvc3Ryb25nPiBicm93c2VyLiBQbGVhc2UgPGEgaHJlZj1cImh0dHA6Ly9icm93c2VoYXBweS5jb20vXCI+dXBncmFkZSB5b3VyIGJyb3dzZXI8L2E+IHRvIGltcHJvdmUgeW91ciBleHBlcmllbmNlLjwvcD5cbi8vIFx0PC9kaXY+XG4vLyA8IVtlbmRpZl0tLT5cblxuLmJyb3dzZS1oYXBweSB7XG5cdEBpbmNsdWRlIHJnYmEoIzc3NywgLjk3KTtcblx0cG9zaXRpb246IGZpeGVkO1xuXHR0b3A6IDA7XG5cdGxlZnQ6IDA7XG5cdHdpZHRoOiAxMDAlO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHotaW5kZXg6IDgwMDtcblxuXHRwIHtcblx0XHRAZXh0ZW5kICVhYnMtY2VudGVyO1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdHdpZHRoOiA4MDBweDtcblx0XHRoZWlnaHQ6IDIwMHB4O1xuXHRcdGZvbnQtc2l6ZTogMmVtO1xuXHRcdGxpbmUtaGVpZ2h0OiAxLjNlbTtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0Y29sb3I6ICNmZmY7XG5cblx0XHRhIHtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdGNvbG9yOiAjNTliNmZkO1xuXHRcdFx0bGluZS1oZWlnaHQ6IDFlbTtcblx0XHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKCM1OWI2ZmQsIC4yKTtcblxuXHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdGNvbG9yOiByZ2JhKCM1OWI2ZmQsIC44KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gVXRpbGl0aWVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyBGb250LXNtb290aGluZyBmb3IgT1NYXG5AbWl4aW4gZm9udC1zbW9vdGhpbmcge1xuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcblx0dGV4dC1zaGFkb3c6IDFweCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4wMDQpO1xufVxuXG4vLyBSZW1vdmUgZm9udC1zbW9vdGhpbmcgaWYgbm90IG5lY2Vzc2FyeVxuQG1peGluIG5vLWZvbnQtc21vb3RoaW5nIHtcblx0LXdlYmtpdC1mb250LXNtb290aGluZzogc3VicGl4ZWwtYW50aWFsaWFzZWQ7XG5cdC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBhdXRvO1xuXHR0ZXh0LXNoYWRvdzogbm9uZTtcbn1cblxuLy8gQWJzb2x1dGUgY2VudGVyIGNvbnRlbnRcbiVhYnMtY2VudGVyIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdHRvcDogNTAlO1xuXHRsZWZ0OiA1MCU7XG5cdHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xufVxuXG4vLyBBYnNvbHV0ZSBDZW50ZXIgVmVydGljYWxseSAoaWU5Kylcbi8vIFBhcmVudCBjb250YWluZXIgd2lsbCBuZWVkIHRvIGhhdmUgYSBoZWlnaHQgZm9yIGl0IHRvIHdvcmsuXG4lYWJzLWNlbnRlci12ZXJ0aWNhbCB7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHR0b3A6IDUwJTtcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpO1xufVxuXG4vLyBBYnNvbHV0ZSBDZW50ZXIgSG9yaXpvbnRhbGx5IChpZTkrKVxuLy8gUGFyZW50IGNvbnRhaW5lciB3aWxsIG5lZWQgdG8gaGF2ZSBhIGhlaWdodCBmb3IgaXQgdG8gd29yay5cbiVhYnMtY2VudGVyLWhvcml6b250YWwge1xuXHRkaXNwbGF5OiBibG9jaztcblx0bGVmdDogNTAlO1xuXHR0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG59XG5cbi8vIFZpc3VhbGx5IGhpZGUgZWxlbWVudHMgd2hpbGUgYXQgdGhlIHNhbWUgdGltZSBtYWtlIHRoZW0gYWNjZXNzaWJsZSBvbiBzY3JlZW4gcmVhZGVyc1xuJXZpc3VhbGx5LWhpZGRlbiB7XG5cdG1hcmdpbjogLTFweDtcblx0cGFkZGluZzogMDtcblx0d2lkdGg6IDFweDtcblx0aGVpZ2h0OiAxcHg7XG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdGNsaXA6IHJlY3QoMCAwIDAgMCk7XG5cdGNsaXA6IHJlY3QoMCwgMCwgMCwgMCk7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcbn1cblxuLy8gRWxsaXBzaXNcbiVlbGxpcHNpcyB7XG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdHdoaXRlLXNwYWNlOiBub3dyYXA7XG5cdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xufVxuXG4vLyBSZW1vdmUgYWxsIGxpc3Qgc3R5bGluZ1xuLy8gZXg6IEBleHRlbmQgJW5ha2VkLWxpc3RcbiVuYWtlZC1saXN0IHtcblx0bGlzdC1zdHlsZTogbm9uZTtcblx0cGFkZGluZzogMDtcblx0bWFyZ2luOiAwO1xufVxuXG4vLyBSZW1vdmUgYWxsIGJ1dHRvbiBzdHlsaW5nIGFuZCByZXNldCBpdCB0byBkZWZhdWx0XG4vLyBleDogQGV4dGVuZCAlbmFrZWQtYnV0dG9uXG4lbmFrZWQtYnV0dG9uIHtcblx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cdG91dGxpbmU6IG5vbmU7XG5cdGJvcmRlcjogMDtcblx0cGFkZGluZzogMDtcblx0bWFyZ2luOiAwO1xuXHRmb250LXNpemU6IDFlbTtcblx0Y3Vyc29yOiBwb2ludGVyO1xufVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBMYXlvdXRcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIG1heC13aWR0aCBjb250YWluZXIgd2l0aCBtdWx0aXBsZSBvcHRpb25zLCBzZWUgdmFyaWFibGVzIGZvciBvcHRpb25zXG4vLyBleDogQGluY2x1ZGUgcm93KG1lZGl1bSlcbkBtaXhpbiByb3coJHdpZHRoOiBmYWxzZSkge1xuXHR3aWR0aDogMTAwJTtcblx0bWFyZ2luOiAwIGF1dG87XG5cdEBpZiAkd2lkdGggPT0gc21hbGwge1xuXHRcdG1heC13aWR0aDogJG1heC13aWR0aC1zbWFsbDtcblx0fSBAZWxzZSBpZiAkd2lkdGggPT0gbWVkaXVtIHtcblx0XHRtYXgtd2lkdGg6ICRtYXgtd2lkdGgtbWVkaXVtO1xuXHR9IEBlbHNlIGlmICR3aWR0aCA9PSBsYXJnZSB7XG5cdFx0bWF4LXdpZHRoOiAkbWF4LXdpZHRoLWxhcmdlO1xuXHR9IEBlbHNlIGlmICR3aWR0aCA9PSB4bGFyZ2Uge1xuXHRcdG1heC13aWR0aDogJG1heC13aWR0aC14bGFyZ2U7XG5cdH0gQGVsc2Uge1xuXHRcdG1heC13aWR0aDogJG1heC13aWR0aC1kZWZhdWx0O1xuXHR9XG59XG5cbi8vIGd1dHRlciBiZXR3ZWVuIGNvbHVtbnMsIHNlZSB2YXJpYWJsZXMgZm9yIG9wdGlvbnNcbi8vIGV4OiBAaW5jbHVkZSBwYWRkaW5nKCkgb3IgQGluY2x1ZGUgcGFkZGluZyhsYXJnZSlcbkBtaXhpbiBwYWRkaW5nKCRzaXplOiBmYWxzZSkge1xuXHRAaWYgJHNpemUgPT0gbGFyZ2Uge1xuXHRcdHBhZGRpbmctbGVmdDogJGd1dHRlci1iYXNlO1xuXHRcdHBhZGRpbmctcmlnaHQ6ICRndXR0ZXItYmFzZTtcblx0XHRAaW5jbHVkZSBtcShtZWRpdW0pIHtcblx0XHRcdHBhZGRpbmctbGVmdDogJGd1dHRlci1sYXJnZTtcblx0XHRcdHBhZGRpbmctcmlnaHQ6ICRndXR0ZXItbGFyZ2U7XG5cdFx0fVxuXHR9IEBlbHNlIHtcblx0XHRwYWRkaW5nLWxlZnQ6ICRndXR0ZXItYmFzZTtcblx0XHRwYWRkaW5nLXJpZ2h0OiAkZ3V0dGVyLWJhc2U7XG5cdH1cbn1cblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ3Jvc3MgQnJvd3NlciAobGVnYWN5KVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQ3Jvc3MtYnJvd3NlciBhbHBoYSB0cmFuc3BhcmVuY3kgZm9yIG9sZCBJRVxuQG1peGluIHJnYmEoJGNvbG9yLCAkYWxwaGEpIHtcblx0JHJnYmE6IHJnYmEoJGNvbG9yLCAkYWxwaGEpO1xuXHQkaWUtaGV4LXN0cjogaWUtaGV4LXN0cigkcmdiYSk7XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkcmdiYTtcblx0ZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoc3RhcnRDb2xvcnN0cj0jeyRpZS1oZXgtc3RyfSxlbmRDb2xvcnN0cj0jeyRpZS1oZXgtc3RyfSk7XG5cdHpvb206IDE7XG59XG5cbi8vIENyb3NzLWJyb3dzZXIgb3BhY2l0eSBmb3Igb2xkIElFXG5AbWl4aW4gb3BhY2l0eSgkYWxwaGEpIHtcblx0b3BhY2l0eTogJGFscGhhO1xuXHQtbXMtZmlsdGVyOlwicHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LkFscGhhKE9wYWNpdHk9JGFscGhhKjEwMClcIjtcblx0ZmlsdGVyOiBhbHBoYShvcGFjaXR5PSRhbHBoYSoxMDApO1xufVxuXG4vLyBDcm9zcy1icm93c2VyIGJhY2tncm91bmQtY292ZXIgZm9yIG9sZCBJRVxuLy8gZXg6IEBleHRlbmQgJWJnLWNvdmVyXG4vLyBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vbG91aXNyZW1pL2JhY2tncm91bmQtc2l6ZS1wb2x5ZmlsbC9naC1wYWdlcy9iYWNrZ3JvdW5kc2l6ZS5taW4uaHRjXG4lYmctY292ZXIge1xuXHRiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuXHRiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuXHQtbXMtYmVoYXZpb3I6IHVybCgnYXNzZXRzL2ltYWdlcy9iYWNrZ3JvdW5kc2l6ZS5taW4uaHRjJyk7XG5cdGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG59XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENsZWFyZml4XG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4lY2Yge1xuXHR6b29tOiAxO1xuXHQmOmJlZm9yZSxcblx0JjphZnRlciB7XG5cdFx0Y29udGVudDogXCJcXDAwMjBcIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRoZWlnaHQ6IDA7XG5cdFx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0fVxuXHQmOmFmdGVyIHtcblx0XHRjbGVhcjogYm90aDtcblx0fVxufVxuXG5AbWl4aW4gY2Yge1xuXHR6b29tOiAxO1xuXHQmOmJlZm9yZSxcblx0JjphZnRlciB7XG5cdFx0Y29udGVudDogXCJcXDAwMjBcIjtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRoZWlnaHQ6IDA7XG5cdFx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0fVxuXHQmOmFmdGVyIHtcblx0XHRjbGVhcjogYm90aDtcblx0fVxufVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDbGFzcyBIZWxwZXJzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBDbGVhciBjbGFzcyBoZWxwZXJzXG4uY2YsXG4uY2xlYXIsXG4uY2xlYXJmaXgge1xuXHRAZXh0ZW5kICVjZjtcbn1cblxuLy8gVmlzdWFsbHkgaGlkZSBlbGVtZW50cyB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIG1ha2UgdGhlbSBhY2Nlc3NpYmxlIG9uIHNjcmVlbiByZWFkZXJzXG4udmlzdWFsbHktaGlkZGVuIHtcblx0QGV4dGVuZCAldmlzdWFsbHktaGlkZGVuO1xufSIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBGb3JtIEVsZW1lbnRzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRGVmYXVsdCBTdHlsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmlucHV0LFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuXHRvdXRsaW5lOiBub25lO1xuXHRib3JkZXItcmFkaXVzOiAwO1xuXHRib3JkZXI6IHJlbSgxcHgpIHNvbGlkICNlZWU7XG5cdHBhZGRpbmc6IHJlbSg1cHggMTBweCk7XG5cdG1hcmdpbjogMDtcblx0d2lkdGg6IDEwMCU7XG5cdGZvbnQtc2l6ZTogcmVtKDEzcHgpO1xufVxuXG4vLyBVbmlxdWUgc3R5bGVzIHRoYXQganVzdCBhcHBseSB0byBpbnB1dC90ZXh0YXJlYS9sYWJlbFxuaW5wdXQsXG50ZXh0YXJlYSxcbmxhYmVsIHtcblx0Y29sb3I6ICNlZWU7XG59XG5cbi8vIEFkZCB0aGUgY29ycmVjdCBhcHBlYXJhbmNlLCBidXQgYWxzbyBhZGp1c3QgdGhlIGhlaWdodCB0byBmaXQgd2l0aCBvdXIgaW5wdXQgZmllbGRzLlxuLy8gVGhpcyBvbmx5IG1hdHRlcnMgZm9yIGFwcGxlIGRldmljZXMgKGhlaWdodClcbnNlbGVjdCB7XG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cdGhlaWdodDogcmVtKDMwcHgpO1xuXHRwYWRkaW5nOiByZW0oNXB4IDEwcHgpO1xufVxuXG4vLyBSZXNldCBTZWFyY2ggSW5wdXRcbmlucHV0W3R5cGU9c2VhcmNoXSB7XG5cdC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuXHQmOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuXHQmOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uLFxuXHQmOjotd2Via2l0LXNlYXJjaC1yZXN1bHRzLWJ1dHRvbixcblx0Jjo6LXdlYmtpdC1zZWFyY2gtcmVzdWx0cy1kZWNvcmF0aW9uIHtcblx0XHQtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG5cdH1cbn1cblxuLy8gTWFrZSBzdXJlIHdlIGFyZSBub3QgYWRkaW5nIHRoZSBzZWxlY3QgaGVpZ2h0IHRvIG11bHRpIHNlbGVjdFxuc2VsZWN0W211bHRpcGxlXSB7XG5cdGhlaWdodDogYXV0bztcbn1cblxuLy8gU3R5bGVzIHJlbGV2YW50IHRvIGNoZWNrYm94ZXNcbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSB7XG5cdHZlcnRpY2FsLWFsaWduOiBib3R0b207XG59XG5cbi8vIFN0eWxlcyByZWxldmFudCB0byByYWRpbyBidXR0b25zXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuXHR2ZXJ0aWNhbC1hbGlnbjogdGV4dC1ib3R0b207XG59XG5cbi8vIExhYmVsIHNwZWNpZmljIHN0eWxpbmdcbmxhYmVsIHtcblx0Zm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuLy8gRm9jdXMgc3BlY2lmaWMgc3R5bGluZ1xuaW5wdXQ6Zm9jdXMsXG50ZXh0YXJlYTpmb2N1cyB7XG5cdG91dGxpbmU6IG5vbmU7XG5cdGJvcmRlci1jb2xvcjogI2VlZTtcblx0Y29sb3I6ICMwMDA7XG59XG5cbi8vIFN1Ym1pdCBpbnB1dCBzcGVjaWZpYyBzdHlsaW5nXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcblx0QGV4dGVuZCAlbmFrZWQtYnV0dG9uO1xuXHRib3JkZXItcmFkaXVzOiAwO1xuXHRoZWlnaHQ6IGF1dG87XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBQbGFjZWhvbGRlcnNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi5wbGFjZWhvbGRlciB7XG5cdGNvbG9yOiAjMDAwO1xufVxuXG5pbnB1dCxcbnRleHRhcmVhIHtcblx0QGluY2x1ZGUgcGxhY2Vob2xkZXIoKSB7XG5cdFx0Y29sb3I6ICMwMDA7XG5cdH1cbn1cblxuaW5wdXQ6Zm9jdXMsXG50ZXh0YXJlYTpmb2N1cyB7XG5cdEBpbmNsdWRlIHBsYWNlaG9sZGVyKCkge1xuXHRcdGNvbG9yOiBibHVlO1xuXHR9XG59XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEJyb3dzZXIgU3BlY2lmaWNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIFJlbW92ZSBleHRyYSBzcGFjaW5nIHRoYXQgRmlyZWZveCBhZGRzIHRvIGJ1dHRvbnNcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciB7XG5cdHBhZGRpbmc6IDA7XG5cdGJvcmRlcjogMFxufVxuXG4vLyBSZW1vdmUgc3Bpbm5lciBmcm9tIHR5cGU9XCJudW1iZXJcIlxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcblx0LXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuXHRtYXJnaW46IDA7XG59XG5cbmlucHV0W3R5cGU9bnVtYmVyXSB7XG5cdC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufVxuXG4vLyBSZXNldCBhbGwgc3R5bGluZyBmb3IgaW5wdXQgYW5kIHRleHRhcmVhLCBoYW5keSBmb3IgbW9iaWxlIGRldmljZXNcbmlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxuaW5wdXRbdHlwZT1cInRpbWVcIl0sXG5pbnB1dFt0eXBlPVwidXJsXCJdLFxuaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuaW5wdXRbdHlwZT1cInBhc3N3b3JkXCJdLFxuaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0sXG50ZXh0YXJlYSB7XG5cdC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcblx0LW1vei1hcHBlYXJhbmNlOiBub25lO1xufVxuIiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFN5bWJvbHNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbkBmb250LWZhY2Uge1xuXHRmb250LWZhbWlseTogXCJzeW1ib2xzXCI7XG5cdHNyYzogdXJsKCdwdWJsaWMvYXNzZXRzL2ZvbnRzL3N5bWJvbHMvc3ltYm9scy5lb3QnKTtcblx0c3JjOiB1cmwoJ3B1YmxpYy9hc3NldHMvZm9udHMvc3ltYm9scy9zeW1ib2xzLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VvdCcpLFxuXHRcdHVybCgncHVibGljL2Fzc2V0cy9mb250cy9zeW1ib2xzL3N5bWJvbHMud29mZicpIGZvcm1hdCgnd29mZicpLFxuXHRcdHVybCgncHVibGljL2Fzc2V0cy9mb250cy9zeW1ib2xzL3N5bWJvbHMudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLFxuXHRcdHVybCgncHVibGljL2Fzc2V0cy9mb250cy9zeW1ib2xzL3N5bWJvbHMuc3ZnI3N5bWJvbHMnKSBmb3JtYXQoJ3N2ZycpO1xuXHRmb250LXdlaWdodDogbm9ybWFsO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbi8vIFN5bWJvbHMgcGxhY2Vob2xkZXIgdG8gZXh0ZW5kIGluc2lkZSB0aGUgbWl4aW4uXG4lc3ltYm9scyB7XG5cdGZvbnQtZmFtaWx5OiBcInN5bWJvbHNcIjtcblx0d2lkdGg6IDFlbTtcblx0bWFyZ2luOiAwO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG5cdGZvbnQtdmFyaWFudDogbm9ybWFsO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcblx0dGV4dC10cmFuc2Zvcm06IG5vbmU7XG5cdGxpbmUtaGVpZ2h0OiAxZW07XG5cdHNwZWFrOiBub25lO1xufVxuXG4vLyBTdHlsZXMgYXBwbGllZCB0byB0aGUgLnN5bWJvbCBjbGFzcyB3aGVuIGFkZGluZyBzeW1ib2xzIHRvIHRoZSBtYXJrdXAuXG4uc3ltYm9sOmJlZm9yZSB7XG5cdGZvbnQtZmFtaWx5OiBcInN5bWJvbHNcIjtcblx0d2lkdGg6IDFlbTtcblx0bWFyZ2luOiAwO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG5cdGZvbnQtdmFyaWFudDogbm9ybWFsO1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcblx0dGV4dC10cmFuc2Zvcm06IG5vbmU7XG5cdGxpbmUtaGVpZ2h0OiAxZW07XG5cdHNwZWFrOiBub25lO1xufVxuXG4vLyBNaXhpbiB0byBhZGQgaW4geW91ciBvd24gc3ltYm9sIHRocm91Z2ggdGhlIGNzcy5cbi8vIFRoZSBtaXhpbiBvbmx5IHdvcmtzIHdpdGggOnBzZXVkb1xuQG1peGluIHN5bWJvbHMoJHN5bWJvbDogZmFsc2UpIHtcblx0QGV4dGVuZCAlc3ltYm9scztcblxuXHRAaWYgJHN5bWJvbCA9PSBcImJvb2tcIiB7XG5cdFx0Y29udGVudDogJ1xcRTAwMSc7XG5cdH1cblx0QGlmICRzeW1ib2wgPT0gXCJicmllZmNhc2VcIiB7XG5cdFx0Y29udGVudDogJ1xcRTAwMic7XG5cdH1cbn1cblxuLy8gSW5kaXZpZHVhbCBDU1Mgc3R5bGVzIGZvciB3aGVuIHlvdSBjYWxsIGJ5IHRoZSBjbGFzcyBuYW1lIGluIG1hcmt1cC5cbi5zLWJvb2s6YmVmb3JlIHsgY29udGVudDogXCJcXEUwMDFcIiB9XG4ucy1icmllZmNhc2U6YmVmb3JlIHsgY29udGVudDogXCJcXEUwMDJcIiB9IiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFNhbXBsZSBQYWdlXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU2VjdGlvbiBDb21tZW50IEhlYWRlclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLnNhbXBsZS1oZWFkZXIge1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcblx0Zm9udC13ZWlnaHQ6IDMwMDtcblx0Zm9udC1zaXplOiByZW0oNDBweCk7XG5cdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cdHBhZGRpbmc6IHJlbSgzMHB4KTtcblx0bWFyZ2luLWJvdHRvbTogcmVtKDUwcHgpO1xuXHRjb2xvcjogI0U3NEMzQztcblx0aDEge1xuXHRcdGZvbnQtd2VpZ2h0OiBpbmhlcml0O1xuXHR9XG59XG5cbi5jb2wtd3JhcCB7XG5cdEBpbmNsdWRlIGNmO1xuXHR3aWR0aDogMTAwJTtcblx0bWF4LXdpZHRoOiByZW0oNzAwcHgpO1xuXHRtYXJnaW46IHJlbSgwIGF1dG8pO1xuXHQud3lzaXd5ZyB7XG5cdFx0cGFkZGluZzogcmVtKDAgMTBweCk7XG5cdH1cbn1cblxuLnNhbXBsZS1zcHJpdGVzLFxuLnNhbXBsZS1zeW1ib2xzIHtcblx0ZmxvYXQ6IGxlZnQ7XG5cdHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTtcblx0ZmxvYXQ6IGxlZnQ7XG5cdG1heC13aWR0aDogNjAwcHg7XG5cdG1hcmdpbjogcmVtKDAgMTBweCA0MHB4KTtcblx0cGFkZGluZzogcmVtKDAgNDBweCA0MHB4KTtcblx0Ym9yZGVyOiAxcHggc29saWQgcmdiYShzZXRjb2xvcihibGFjayksIC4yKTtcblx0Ym9yZGVyLXJhZGl1czogcmVtKDVweCk7XG5cdG92ZXJmbG93OiBoaWRkZW47XG5cdEBpbmNsdWRlIG1xKHNtYWxsKSB7XG5cdFx0d2lkdGg6IGNhbGMoNTAlIC0gMjBweCk7XG5cdFx0bWFyZ2luOiByZW0oMCAxMHB4IDQwcHgpO1xuXHR9XG5cdC8vIGhlYWRpbmdcblx0aDIge1xuXHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHR3aWR0aDogY2FsYygxMDAlICsgODBweCk7XG5cdFx0bGVmdDogcmVtKC00MHB4KTtcblx0XHRwYWRkaW5nOiByZW0oMTBweCA0MHB4KTtcblx0XHRiYWNrZ3JvdW5kOiBzZXRjb2xvcihibGFjayk7XG5cdFx0Y29sb3I6ICNmZmY7XG5cdFx0Zm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuXHRcdGZvbnQtd2VpZ2h0OiA3MDA7XG5cdFx0Zm9udC1zaXplOiByZW0oMTZweCk7XG5cdFx0bWFyZ2luLWJvdHRvbTogcmVtKDQwcHgpO1xuXHR9XG5cdC8vIGljb25zXG5cdGkge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdG1hcmdpbi1ib3R0b206IHJlbSgzMHB4KTtcblx0XHQmOmxhc3Qtb2YtdHlwZSB7XG5cdFx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHRcdH1cblx0fVxufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU3ByaXRlcyBFeGFtcGxlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uc2FtcGxlLXNwcml0ZXMge1xuXHQuaWNvbi1vbmUge1xuXHRcdCY6YmVmb3JlIHtcblx0XHRcdGNvbnRlbnQ6IFwiXCI7XG5cdFx0XHRAZXh0ZW5kIC5zcHJpdGUtc2FtcGxlO1xuXHRcdFx0QGluY2x1ZGUgc3ByaXRlKCRzdW4pO1xuXHRcdH1cblx0fVxuXHQuaWNvbi10d28ge1xuXHRcdCY6YmVmb3JlIHtcblx0XHRcdGNvbnRlbnQ6IFwiXCI7XG5cdFx0XHRAZXh0ZW5kIC5zcHJpdGUtc2FtcGxlO1xuXHRcdFx0QGluY2x1ZGUgc3ByaXRlKCRhaXIpO1xuXHRcdH1cblx0fVxufVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gU3ltYm9scyBFeGFtcGxlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uc2FtcGxlLXN5bWJvbHMge1xuXHQuc3ltYm9sLW9uZSB7XG5cdFx0Zm9udC1zaXplOiByZW0oMzBweCk7XG5cdFx0JjpiZWZvcmUge1xuXHRcdFx0QGluY2x1ZGUgc3ltYm9scyhib29rKTtcblx0XHR9XG5cdH1cblx0LnN5bWJvbC10d28ge1xuXHRcdGZvbnQtc2l6ZTogcmVtKDMwcHgpO1xuXHRcdCY6YmVmb3JlIHtcblx0XHRcdEBpbmNsdWRlIHN5bWJvbHMoYnJpZWZjYXNlKTtcblx0XHRcdGNvbG9yOiAjMzQ5OERCO1xuXHRcdH1cblx0fVxufVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBHcmlkIEV4YW1wbGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4uZ3JpZC1zYW1wbGVzIHtcblx0Y29kZSB7XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdH1cblxuXHRoMiB7XG5cdFx0QGV4dGVuZCAlaHNpemUtbGFyZ2U7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdG1hcmdpbi1ib3R0b206IHJlbSgyMHB4KTtcblx0fVxuXHRoNCB7XG5cdFx0QGV4dGVuZCAlaHNpemUtc21hbGw7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdG1hcmdpbi1ib3R0b206IHJlbSgyMHB4KTtcblx0fVxuXHQucm93ID4gY29kZSB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHBhZGRpbmc6IHJlbSgyMHB4KTtcblx0fVxuXHQucm93IHtcblx0XHRAaW5jbHVkZSBjb250YWluZXIoMTIwMHB4KTtcblx0XHRiYWNrZ3JvdW5kOiByZ2JhKHNldGNvbG9yKGJsYWNrKSwgLjEpO1xuXHRcdHBhZGRpbmc6IHJlbSgwIDIwcHgpO1xuXHRcdG1hcmdpbi1ib3R0b206IHJlbSg1MHB4KTtcblx0fVxuXHRkaXYsXG5cdGFzaWRlLFxuXHRhcnRpY2xlIHtcblx0XHRiYWNrZ3JvdW5kOiByZ2JhKHNldGNvbG9yKGJsYWNrKSwgLjQpO1xuXHRcdHBhZGRpbmc6IHJlbSgyMHB4KTtcblx0XHRtYXJnaW4tYm90dG9tOiByZW0oMjBweCk7XG5cdFx0Y29sb3I6ICNmZmY7XG5cdH1cbn1cblxuLy8gQmFzaWNcbi5ncmlkLWJhc2ljIHtcblx0ZGl2IHtcblx0XHRAaW5jbHVkZSBzcGFuKDUgb2YgMTApO1xuXHRcdCY6Zmlyc3QtY2hpbGQge1xuXHRcdFx0QGluY2x1ZGUgc3Bhbig1IG9mIDEwKTtcblx0XHR9XG5cdFx0JjpsYXN0LWNoaWxkIHtcblx0XHRcdEBpbmNsdWRlIHNwYW4oNSBvZiAxMCBsYXN0KTtcblx0XHR9XG5cdH1cbn1cblxuLy8gTXVsdGlwbGVcbi5ncmlkLW11bHRpcGxlIHtcblx0ZGl2IHtcblx0XHRmbG9hdDogbGVmdDtcblx0fVxuXHQuaXRlbS0xIHtcblx0XHRAaW5jbHVkZSBzcGFuKDEgb2YgMTIpO1xuXHR9XG5cdC5pdGVtLTIge1xuXHRcdEBpbmNsdWRlIHNwYW4oMTEgb2YgMTIgbGFzdCk7XG5cdH1cblx0Lml0ZW0tMyB7XG5cdFx0QGluY2x1ZGUgc3BhbigyIG9mIDEyKTtcblx0fVxuXHQuaXRlbS00IHtcblx0XHRAaW5jbHVkZSBzcGFuKDEwIG9mIDEyIGxhc3QpO1xuXHR9XG5cdC5pdGVtLTUge1xuXHRcdEBpbmNsdWRlIHNwYW4oMyBvZiAxMik7XG5cdH1cblx0Lml0ZW0tNiB7XG5cdFx0QGluY2x1ZGUgc3Bhbig5IG9mIDEyIGxhc3QpO1xuXHR9XG5cdC5pdGVtLTcge1xuXHRcdEBpbmNsdWRlIHNwYW4oNCBvZiAxMik7XG5cdH1cblx0Lml0ZW0tOCB7XG5cdFx0QGluY2x1ZGUgc3Bhbig4IG9mIDEyIGxhc3QpO1xuXHR9XG5cdC5pdGVtLTkge1xuXHRcdEBpbmNsdWRlIHNwYW4oNSBvZiAxMik7XG5cdH1cblx0Lml0ZW0tMTAge1xuXHRcdEBpbmNsdWRlIHNwYW4oNyBvZiAxMiBsYXN0KTtcblx0fVxuXHQuaXRlbS0xMSB7XG5cdFx0QGluY2x1ZGUgc3Bhbig2IG9mIDEyKTtcblx0fVxuXHQuaXRlbS0xMiB7XG5cdFx0QGluY2x1ZGUgc3Bhbig2IG9mIDEyIGxhc3QpO1xuXHR9XG59XG5cbi8vIE5lc3RlZFxuLmdyaWQtbmVzdGVkIHtcblx0Lml0ZW0tMSB7XG5cdFx0QGluY2x1ZGUgc3BhbigzIG9mIDkpO1xuXHR9XG5cdC5pdGVtLTIge1xuXHRcdEBpbmNsdWRlIHNwYW4oNiBvZiA5IGxhc3QpO1xuXHRcdD4gY29kZSB7XG5cdFx0XHRtYXJnaW4tYm90dG9tOiByZW0oMjBweCk7XG5cdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0fVxuXHR9XG5cdGFzaWRlLFxuXHRhcnRpY2xlIHtcblx0XHRtYXJnaW4tYm90dG9tOiAwO1xuXHR9XG5cdGFzaWRlIHtcblx0XHRAaW5jbHVkZSBzcGFuKDQgb2YgOCk7XG5cdH1cblx0YXJ0aWNsZSB7XG5cdFx0QGluY2x1ZGUgc3Bhbig0IG9mIDggbGFzdCk7XG5cdH1cbn0iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gU3ByaXRlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gSW5kaXZpZHVhbCB2YXJpYWJsZXNcbiRhaXI6IC0xMDBweCAtMHB4IDkwcHggNzRweDtcbiRzdW46IC0wcHggLTBweCAxMDBweCAxMDBweDtcblxuLy8gTWl4aW5zXG5AbWl4aW4gc3ByaXRlLXdpZHRoKCRzcHJpdGUpIHtcbiAgd2lkdGg6IG50aCgkc3ByaXRlLCAzKVxufVxuQG1peGluIHNwcml0ZS1oZWlnaHQoJHNwcml0ZSkge1xuICBoZWlnaHQ6IG50aCgkc3ByaXRlLCA0KVxufVxuXG4vLyBGdW5jdGlvbnNcbkBmdW5jdGlvbiBzcHJpdGUtd2lkdGgoJHNwcml0ZSkge1xuICBAcmV0dXJuIG50aCgkc3ByaXRlLCAzKTtcbn1cbkBmdW5jdGlvbiBzcHJpdGUtaGVpZ2h0KCRzcHJpdGUpIHtcbiAgQHJldHVybiBudGgoJHNwcml0ZSwgNCk7XG59XG5cbi8vIFBvc2l0aW9uaW5nXG5AbWl4aW4gc3ByaXRlLXBvc2l0aW9uKCRzcHJpdGUpIHtcbiAgJHNwcml0ZS1vZmZzZXQteDogbnRoKCRzcHJpdGUsIDEpO1xuICAkc3ByaXRlLW9mZnNldC15OiBudGgoJHNwcml0ZSwgMik7XG4gIGJhY2tncm91bmQtcG9zaXRpb246ICRzcHJpdGUtb2Zmc2V0LXggJHNwcml0ZS1vZmZzZXQteTtcbn1cblxuLy8gU3ByaXRlIE1peGluXG5AbWl4aW4gc3ByaXRlKCRzcHJpdGUsICRkaXNwbGF5OiBibG9jaykge1xuICBAaW5jbHVkZSBzcHJpdGUtcG9zaXRpb24oJHNwcml0ZSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6ICRkaXNwbGF5O1xuICBAaW5jbHVkZSBzcHJpdGUtd2lkdGgoJHNwcml0ZSk7XG4gIEBpbmNsdWRlIHNwcml0ZS1oZWlnaHQoJHNwcml0ZSk7XG59XG5cbi8vIEBleHRlbmQgdGhlc2UgdG8gcHVsbCBpbiB0aGUgYmFja2dyb3VuZCBpbWFnZVxuLnNwcml0ZS1zYW1wbGUge1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgncHVibGljL2Fzc2V0cy9pbWFnZXMvc3ByaXRlcy9zcHJpdGUtc2FtcGxlLnBuZycpO1xuICB9XG5AbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogNzJkcGkpIHtcbi5zcHJpdGUtc2FtcGxlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ3B1YmxpYy9hc3NldHMvaW1hZ2VzL3Nwcml0ZXMvc3ByaXRlLXNhbXBsZUAyeC5wbmcnKTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDE5MHB4IDEwMHB4O1xuICB9XG59XG5cbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBCYXNlICYgVHlwb2dyYXBoeSBEZWZhdWx0c1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFBzZXVkb1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuOjpzZWxlY3Rpb24ge1xuXHRiYWNrZ3JvdW5kOiAjNzc3O1xuXHRjb2xvcjogI2ZmZjtcblx0dGV4dC1zaGFkb3c6IG5vbmU7XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBHZW5lcmFsXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5odG1sIHtcblx0Zm9udC1zaXplOiA2Mi41JTtcbn1cblxuYm9keSB7XG5cdGJhY2tncm91bmQ6ICNmZmY7XG5cdGNvbG9yOiAjMkMzRTUwO1xuXHRAaW5jbHVkZSBzZXRmb250KGRlZmF1bHQpO1xuXHRmb250LXNpemU6ICRib2R5LWZvbnQtc2l6ZTtcblx0QGluY2x1ZGUgZm9udC1zbW9vdGhpbmc7XG59XG5cbmEge1xuXHRjb2xvcjogIzJDM0U1MDtcblx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXHQmOmhvdmVyLFxuXHQmOmZvY3VzIHtcblx0XHRjb2xvcjogc2V0Y29sb3IoZ3JheSk7XG5cdH1cblx0Jjpmb2N1cyB7XG5cdFx0b3V0bGluZTogbm9uZTtcblx0fVxufVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBIZWFkbGluZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG5cdGxpbmUtaGVpZ2h0OiAxO1xuXHRhIHtcblx0XHRjb2xvcjogIzAwMDtcblx0fVxufVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBUZXh0IENvbXBvbmVudHNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbnAsXG5kbCxcbmFkZHJlc3Mge1xuXHRAZXh0ZW5kICV0eXBlLW1lZGl1bTtcbn1cblxucCxcbmxpLFxuZHQsXG5kZCB7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG5cdGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxubGkge1xuXHRsaW5lLWhlaWdodDogMTtcbn1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEV4dGVuZCBXWVNJV1lHIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLnd5c2l3eWcge1xuXHRAZXh0ZW5kICV3eXNpd3lnO1xufSIsIi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBFeHRlbmRzICYgUGxhY2Vob2xkZXJzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gTWlzYyAlcGxhY2Vob2xkZXJzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4lbW9kdWxlLXBhZGRpbmcge1xuXHRwYWRkaW5nLXRvcDogcmVtKDUwcHgpO1xuXHRwYWRkaW5nLWJvdHRvbTogcmVtKDUwcHgpO1xuXHRAaW5jbHVkZSBtcShsYXJnZSkge1xuXHRcdHBhZGRpbmctdG9wOiByZW0oOTBweCk7XG5cdFx0cGFkZGluZy1ib3R0b206IHJlbSg5MHB4KTtcblx0fVxufVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBQYXJhZ3JhcGggU2l6aW5nXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4ldHlwZS1tZWRpdW0ge1xuXHRAaW5jbHVkZSB0eXBlKDE2LCAyNCk7XG59XG5cbiV0eXBlLWxhcmdlIHtcblx0QGluY2x1ZGUgdHlwZSgxNywgMjgpO1xuXHRAaW5jbHVkZSBtcShsYXJnZSkge1xuXHRcdEBpbmNsdWRlIHR5cGUoMjAsIDMzKTtcblx0fVxufVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBHbG9iYWwgSGVhZGxpbmVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4laHNpemUtc21hbGwge1xuXHRAaW5jbHVkZSBtcShtZWRpdW0pIHtcblx0XHRAaW5jbHVkZSB0eXBlKDIwLCAyOSk7XG5cdH1cbn1cblxuJWhzaXplLW1lZGl1bSB7XG5cdEBpbmNsdWRlIHR5cGUoMjAsIDI5KTtcblx0QGluY2x1ZGUgbXEobWVkaXVtKSB7XG5cdFx0QGluY2x1ZGUgdHlwZSgyNSwgMzYpO1xuXHR9XG59XG5cbiVoc2l6ZS1sYXJnZSB7XG5cdEBpbmNsdWRlIHR5cGUoMjUsIDM2KTtcblx0QGluY2x1ZGUgbXEobWVkaXVtKSB7XG5cdFx0QGluY2x1ZGUgdHlwZSgzMSwgNDUpO1xuXHR9XG59XG5cbiVoc2l6ZS14bGFyZ2Uge1xuXHRAaW5jbHVkZSB0eXBlKDMxLCA0NSk7XG5cdEBpbmNsdWRlIG1xKG1lZGl1bSkge1xuXHRcdEBpbmNsdWRlIHR5cGUoMzksIDU3KTtcblx0fVxufVxuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBXeXNpd3lnIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJXd5c2l3eWcge1xuXG5cdGgxLFxuXHRoMiB7XG5cdFx0QGV4dGVuZCAlaHNpemUteGxhcmdlO1xuXHRcdGZvbnQtd2VpZ2h0OiAzMDA7XG5cdH1cblxuXHRoMyxcblx0aDQge1xuXHRcdEBleHRlbmQgJWhzaXplLWxhcmdlO1xuXHRcdGZvbnQtd2VpZ2h0OiA0MDA7XG5cdH1cblxuXHRoNSxcblx0aDYge1xuXHRcdEBleHRlbmQgJWhzaXplLW1lZGl1bTtcblx0XHRmb250LXdlaWdodDogNzAwO1xuXHR9XG5cblx0cCxcblx0bGkge1xuXHRcdEBleHRlbmQgJXR5cGUtbWVkaXVtO1xuXHR9XG5cblx0YSB7XG5cdFx0Y29sb3I6ICNFNzRDM0M7XG5cdH1cblxuXHRwLFxuXHR1bCxcblx0b2wge1xuXHRcdG1hcmdpbi1ib3R0b206IHJlbSgzMHB4KTtcblx0fVxuXG5cdHVsLFxuXHRvbCB7XG5cdFx0bWFyZ2luLWxlZnQ6IHJlbSgzMHB4KTtcblx0fVxuXG59IiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFR5cGUgU2V0dGluZyBNaXhpblxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gRm9yIGVhc2llciB3cml0aW5nIG9mIGZvbnQgc2l6ZXMgYW5kIGxpbmUtaGVpZ2h0cywgcmVsYXRpdmVseS5cbi8vIFRoaXMgY2FuIGJlIHVzZWQgZm9yIHdyaXRpbmcgYmFzZSBzdHlsZXMsIGJ1dCBhbHNvIHNwZWNpZmljIG9uZXMgaWYgbmVjZXNzYXJ5LlxuXG4kcm9vdC1mb250LXNpemU6IDEwIWRlZmF1bHQ7XG5cbkBtaXhpbiB0eXBlKCR0YXJnZXQsICRsaW5lLWhlaWdodCwgJGNvbnRleHQ6IG51bGwpIHtcblxuICAvLyBJcyB0aGUgdGFyZ2V0IHZhbHVlIHVuaXRsZXNzP1xuICBAaWYgdW5pdGxlc3MoJHRhcmdldCkge1xuXG4gICAgLy8gSXMgaXQgcmVseWluZyBvbiBhIGNvbnRleHQgdmFsdWU/XG4gICAgQGlmICRjb250ZXh0ICE9IG51bGwge1xuXG4gICAgICAvLyBJcyB0aGUgY29udGV4dCB1bml0bGVzcz8gSWYgc28sIHdyaXRlIG91dCB0aGUgdGFyZ2V0IHZhbHVlIGluIGVtcy5cbiAgICAgIEBpZiB1bml0bGVzcygkY29udGV4dCkge1xuICAgICAgICBmb250LXNpemU6ICgkdGFyZ2V0IC8gJGNvbnRleHQpICogMWVtO1xuICAgICAgfSBAZWxzZSB7XG4gICAgICAgIEBlcnJvciAnWW91ciB2YWx1ZSBmb3IgYCRjb250ZXh0YCBpcyBub3QgdW5pdGxlc3MuJztcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gV3JpdGUgb3V0IHRoZSB0YXJnZXQgdmFsdWUgaW4gcmVtcy5cbiAgICBAZWxzZSB7XG4gICAgICBmb250LXNpemU6ICgkdGFyZ2V0IC8gJHJvb3QtZm9udC1zaXplKSAqIDFyZW07XG4gICAgfVxuXG4gIH0gQGVsc2Uge1xuICAgIEBlcnJvciAnWW91ciB2YWx1ZSBmb3IgYCR0YXJnZXRgIGlzIG5vdCB1bml0bGVzcy4nO1xuICB9XG5cbiAgLy8gTGluZSBIZWlnaHQgc2hvdWxkIGJlIHVuaXRsZXNzLlxuICBAaWYgdW5pdGxlc3MoJGxpbmUtaGVpZ2h0KSB7XG4gICAgLy8gTGluZSBoZWlnaHQgc2hvdWxkIGFsbW9zdCBhbHdheXMgYmUgdW5pdGxlc3MsIGp1c3Qgc2ltcGxlIG1hdGguXG4gICAgbGluZS1oZWlnaHQ6ICgkbGluZS1oZWlnaHQgLyAkdGFyZ2V0KTtcbiAgfSBAZWxzZSB7XG4gICAgQGVycm9yICdZb3VyIHZhbHVlIGZvciBgJGxpbmUtaGVpZ2h0YCBpcyBub3QgdW5pdGxlc3MuJztcbiAgfVxuXG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBTYW1wbGUgVXNhZ2Vcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEV4YW1wbGU6XG4vLyBoMSB7XG4vLyAgQGluY2x1ZGUgdHlwZSgzMiwgMzYpO1xuLy8gfVxuXG4vLyBPdXRwdXQ6XG4vLyBoMSB7XG4vLyAgZm9udC1zaXplOiAycmVtO1xuLy8gIGxpbmUtaGVpZ2h0OiAxLjEyNTtcbi8vIH0iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gUmUtVXNhYmxlIEVNICYgUkVNIEZ1bmN0aW9uc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuQGZ1bmN0aW9uIGVtKCRweC12YWx1ZXMsICRmb250LXNpemU6ICRib2R5LWZvbnQtc2l6ZSkge1xuXHQvLyBDcmVhdGUgYW4gZW1wdHkgbGlzdCB0aGF0IHdlIGNhbiBkdW1wIHZhbHVlcyBpbnRvXG5cdCRlbS12YWx1ZXM6ICgpO1xuXHRAZWFjaCAkdmFsdWUgaW4gJHB4LXZhbHVlcyB7XG5cdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIHZhbHVlIGlzIDAsIGF1dG8sIG9yIGluaGVyaXRlZFxuXHRcdC8vIElmIHNvLCBkbyBub3RoaW5nIGFuZCBvdXRwdXQgdmFsdWVcblx0XHRAaWYgJHZhbHVlID09IDAgb3IgJHZhbHVlID09IGF1dG8gb3IgJHZhbHVlID09IGluaGVyaXQge1xuXHRcdFx0JGVtLXZhbHVlczogYXBwZW5kKCRlbS12YWx1ZXMsICR2YWx1ZSk7XG5cdFx0Ly8gSWYgdGhlIHZhbHVlIGlzIGEgcGl4ZWwsIGNvbnZlcnQgdG8gZW0gdmFsdWVcblx0XHR9IEBlbHNlIGlmIHVuaXQoJHZhbHVlKSA9PSAncHgnIHtcblx0XHRcdCRlbS12YWx1ZXM6IGFwcGVuZCgkZW0tdmFsdWVzLCAjeygkdmFsdWUvJGZvbnQtc2l6ZSl9ZW0pO1xuXHRcdC8vIEZvciBldmVyeXRoaW5nIGVsc2UsIGtlZXAgYXMgaXNcblx0XHR9IEBlbHNlIHtcblx0XHRcdCRlbS12YWx1ZXM6IGFwcGVuZCgkZW0tdmFsdWVzLCAkdmFsdWUpO1xuXHRcdH1cblx0fVxuXHRAcmV0dXJuICRlbS12YWx1ZXM7XG59XG5cbkBmdW5jdGlvbiByZW0oJHB4LXZhbHVlcywgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplKSB7XG5cdC8vIENyZWF0ZSBhbiBlbXB0eSBsaXN0IHRoYXQgd2UgY2FuIGR1bXAgdmFsdWVzIGludG9cblx0JHJlbS12YWx1ZXM6ICgpO1xuXHRAZWFjaCAkdmFsdWUgaW4gJHB4LXZhbHVlcyB7XG5cdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIHZhbHVlIGlzIDAsIGF1dG8sIG9yIGluaGVyaXRlZFxuXHRcdC8vIElmIHNvLCBkbyBub3RoaW5nIGFuZCBvdXRwdXQgdmFsdWVcblx0XHRAaWYgJHZhbHVlID09IDAgb3IgJHZhbHVlID09IGF1dG8gb3IgJHZhbHVlID09IGluaGVyaXQge1xuXHRcdFx0JHJlbS12YWx1ZXM6IGFwcGVuZCgkcmVtLXZhbHVlcywgJHZhbHVlKTtcblx0XHQvLyBJZiB0aGUgdmFsdWUgaXMgYSBwaXhlbCwgY29udmVydCB0byBlbSB2YWx1ZVxuXHRcdH0gQGVsc2UgaWYgdW5pdCgkdmFsdWUpID09ICdweCcge1xuXHRcdFx0JHJlbS12YWx1ZXM6IGFwcGVuZCgkcmVtLXZhbHVlcywgI3soJHZhbHVlLyRmb250LXNpemUpfXJlbSk7XG5cdFx0Ly8gRm9yIGV2ZXJ5dGhpbmcgZWxzZSwga2VlcCBhcyBpc1xuXHRcdH0gQGVsc2Uge1xuXHRcdFx0JHJlbS12YWx1ZXM6IGFwcGVuZCgkcmVtLXZhbHVlcywgJHZhbHVlKTtcblx0XHR9XG5cdH1cblx0QHJldHVybiAkcmVtLXZhbHVlcztcbn0iLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gRm9udHNcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBAZm9udC1mYWNlICYgQGltcG9ydFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gQGZvbnQtZmFjZSB7XG4vLyBcdGZvbnQtZmFtaWx5OiAnQ2xhcmVuZG9uQlQtUm9tYW4nO1xuLy8gXHRzcmM6dXJsKCdhc3NldHMvZm9udHMvZm9udC1mb2xkZXItbmFtZS9mb250LWZpbGUuZW90Jyk7XG4vLyBcdHNyYzp1cmwoJ2Fzc2V0cy9mb250cy9mb250LWZvbGRlci1uYW1lL2ZvbnQtZmlsZS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuLy8gXHRcdHVybCgnYXNzZXRzL2ZvbnRzL2ZvbnQtZm9sZGVyLW5hbWUvZm9udC1maWxlLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbi8vIFx0XHR1cmwoJ2Fzc2V0cy9mb250cy9mb250LWZvbGRlci1uYW1lL2ZvbnQtZmlsZS50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyk7XG4vLyBcdGZvbnQtd2VpZ2h0OiA0MDA7XG4vLyB9XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEZvbnQgVmFyaWFibGVzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBWYXJpYWJsZXMgYmVzdCB1dGlsaXplZCBmb3IgZm9udCBzZXJ2aWNlcyB3aXRob3V0IGZhbWlseSBncm91cGluZy5cbiRmb250LXJlZ3VsYXI6ICdSZWd1bGFyIEZvbnQgRmFtaWx5IE5hbWUnLCBzYW5zLXNlcmlmO1xuJGZvbnQtbGlnaHQ6ICdMaWdodCBGb250IEZhbWlseSBOYW1lJywgc2Fucy1zZXJpZjtcbiRmb250LWJvbGQ6ICdCb2xkIEZvbnQgRmFtaWx5IE5hbWUnLCBzYW5zLXNlcmlmO1xuXG4vLyBWYXJpYWJsZXMgYmVzdCB1dGlsaXplZCBmb3IgZm9udCBzZXJ2aWNlcyB3aXRoIGZhbWlseSBncm91cGluZy5cbiRmb250LW5hbWUtb25lOiAnRm9udCBOYW1lIE9uZScsIHNhbnMtc2VyaWY7XG4kZm9udC1mb250LXR3bzogJ0ZvbnQgTmFtZSBUd28nLCBzYW5zLXNlcmlmO1xuXG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBGb250IEZ1bmN0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBGb250IExpc3QgTWFwXG4kZm9udHM6IChcblx0Zm9udG9uZTogKFxuXHRcdHJlZ3VsYXI6ICRmb250LXJlZ3VsYXIsXG5cdFx0bGlnaHQ6ICRmb250LWxpZ2h0LFxuXHRcdGJvbGQ6ICRmb250LWJvbGRcblx0KSxcblx0Zm9udHR3bzogKFxuXHRcdHJlZ3VsYXI6ICRmb250LXJlZ3VsYXIsXG5cdFx0bGlnaHQ6ICRmb250LWxpZ2h0LFxuXHRcdGJvbGQ6ICRmb250LWJvbGRcblx0KVxuKTtcblxuLy8gZXg6IGZvbnQtZmFtaWx5OiBzZXRmb250KGZvbnRvbmUsIGxpZ2h0KVxuLy8gMXN0IHZhbHVlIGlzIHlvdXIgXCJGb250IExpc3QgTWFwXCIgZm9udCBsYWJlbFxuLy8gMm5kIHZhbHVlIGlzIHRoZSBzdHlsZSBmcm9tIFwiRm9udCBMaXN0IE1hcFwiIGFycmF5XG5cbkBmdW5jdGlvbiBzZXRmb250KCRuYW1lLCAkd2VpZ2h0OiByZWd1bGFyKSB7XG5cdEBpZiBtYXAtaGFzLWtleSgkZm9udHMsICRuYW1lKSB7XG5cdFx0QHJldHVybiBtYXAtZ2V0KG1hcC1nZXQoJGZvbnRzLCAkbmFtZSksICR3ZWlnaHQpO1xuXHR9IEBlbHNlIHtcblx0XHRAd2FybiBcIkNvdWxkbid0IGZpbmQgYSBmb250IG5hbWVkIGAjeyRuYW1lfWAuXCI7XG5cdH1cbn1cblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gRm9udCBNaXhpblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gZXg6IEBpbmNsdWRlIHNldGZvbnQoZm9udC1vbmUsIDQwMClcbi8vIEZpcnN0IHZhbHVlIGlzIHlvdXIgJGZhbWlseSBhbmQgc2Vjb25kIHZhbHVlIGlzIHlvdXIgd2VpZ2h0XG5cbkBtaXhpbiBzZXRmb250KCRmYW1pbHk6IHNhbnMtc2VyaWYsICR3ZWlnaHQ6IG5vcm1hbCkge1xuXHQvLyBEZWZhdWx0IEZvbnQgU3RhY2tcblx0QGlmICRmYW1pbHkgPT0gXCJkZWZhdWx0XCIge1xuXHRcdGZvbnQtZmFtaWx5OiBBcmlhbCwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG5cdH1cblx0Ly8gRm9udCBPbmVcblx0QGlmICRmYW1pbHkgPT0gXCJmb250LW9uZVwiIHtcblx0XHRmb250LWZhbWlseTogJGZvbnQtbmFtZS1vbmU7XG5cdH1cblx0Ly8gRm9udCBUd29cblx0QGlmICRmYW1pbHkgPT0gXCJmb250LXR3b1wiIHtcblx0XHRmb250LWZhbWlseTogJGZvbnQtbmFtZS10d287XG5cdH1cblx0Zm9udC13ZWlnaHQ6ICR3ZWlnaHQ7XG59IiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbi8vIFZhcmlhYmxlc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJvb3QgRm9udCBTaXppbmdcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIDxodG1sPiBhbmQgPGJvZHk+IGZvbnQgc2l6ZXNcbiRodG1sLWZvbnQtc2l6ZTogNjIuNSU7XG4kYm9keS1mb250LXNpemU6IDE2cHg7XG4kZW0tYmFzZTogMTY7XG5cbi8vIE11bHRpcGxpZXIgZm9yIFJFTSBNaXhpblxuLy8gSXQgbmVlZHMgdG8gc3RheSB0aGUgc2FtZSBzaXplIGFzIDxodG1sPiBmb250IHNpemUsIGJ1dCBpbiBwaXhlbHNcbiRiYXNlLWZvbnQtc2l6ZTogMTBweCAhZGVmYXVsdDtcblxuLy8gV2hldGhlciB0byBvdXRwdXQgZmFsbGJhY2sgdmFsdWVzIGluIHB4IHdoZW4gb3V0cHV0dGluZyByZW1zLlxuJHJlbS13aXRoLXB4LWZhbGxiYWNrOiBmYWxzZSAhZGVmYXVsdDtcblxuLy8gSW1wb3J0IHVuaXQgZnVuY3Rpb25cbkBpbXBvcnQgXCIuLi91dGlscy9mdW5jdGlvbnMvdW5pdHNcIjtcblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gR2VuZXJhbFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gR3V0dGVyXG4kZ3V0dGVyLWJhc2U6ICAgICAgIHJlbSgxMHB4KTtcbiRndXR0ZXItbWVkaXVtOiAgICAgcmVtKDE1cHgpO1xuJGd1dHRlci1sYXJnZTogICAgICByZW0oMzBweCk7XG5cbi8vIFJvd3MgTWF4LVdpZHRoXG4kbWF4LXdpZHRoLWRlZmF1bHQ6IHJlbSgxMDIwcHgpO1xuJG1heC13aWR0aC1zbWFsbDogICByZW0oNjgwcHgpO1xuJG1heC13aWR0aC1tZWRpdW06ICByZW0oOTgwcHgpO1xuJG1heC13aWR0aC1sYXJnZTogICByZW0oMTIyMHB4KTtcbiRtYXgtd2lkdGgteGxhcmdlOiAgcmVtKDE0NDBweCk7XG5cbi8vIEFuaW1hdGlvblxuJGN1YmljOiAgICAgICAgICAgICBjdWJpYy1iZXppZXIoMC42MywgMC42NCwgMC4zLCAxKTtcbiR0aW1pbmc6ICAgICAgICAgICAgNTAwbXM7XG4kdGltaW5nLWZhc3Q6ICAgICAgIDM1MG1zO1xuXG4vLyBQcmludFxuJHByaW50LW1lZGlhOiAgICAgICBmYWxzZSAhZGVmYXVsdDtcblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gTWVkaWEgUXVlcnkgU2V0dGluZ3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIE1heCBUYWJsZXQgRGV2aWNlIFdpZHRoXG4kbXEtdGFibGV0LWxhbmRzY2FwZTogZW0oMTI4MHB4LCAxNnB4KTtcblxuLy8gTVEgVmFyaWFibGVzXG4kbXEtbWluaTogICAgICAgICAgIDQ4MHB4O1xuJG1xLXNtYWxsOiAgICAgICAgICA2MDBweDtcbiRtcS1tZWRpdW06ICAgICAgICAgNzY4cHg7XG4kbXEtbGFyZ2U6ICAgICAgICAgIDk2MHB4O1xuJG1xLXhsYXJnZTogICAgICAgICAxMjIwcHg7XG4kbXEteHhsYXJnZTogICAgICAgIDE0NDBweDtcbiRtcS14eHhsYXJnZTogICAgICAgMTY0MHB4O1xuXG4vLyBNZWRpYSBRdWVyeSAtIG1pbi13aWR0aFxuJG1xLW1pbi1taW5pOiAgICAgICBlbSgkbXEtbWluaSwgMTZweCk7XG4kbXEtbWluLXNtYWxsOiAgICAgIGVtKCRtcS1zbWFsbCwgMTZweCk7XG4kbXEtbWluLW1lZGl1bTogICAgIGVtKCRtcS1tZWRpdW0sIDE2cHgpO1xuJG1xLW1pbi1sYXJnZTogICAgICBlbSgkbXEtbGFyZ2UsIDE2cHgpO1xuJG1xLW1pbi14bGFyZ2U6ICAgICBlbSgkbXEteGxhcmdlLCAxNnB4KTtcbiRtcS1taW4teHhsYXJnZTogICAgZW0oJG1xLXh4bGFyZ2UsIDE2cHgpO1xuJG1xLW1pbi14eHhsYXJnZTogICBlbSgkbXEteHh4bGFyZ2UsIDE2cHgpO1xuXG4vLyBNZWRpYSBRdWVyeSAtIG1heC13aWR0aFxuJG1xLW1heC10aW55OiAgICAgICBlbSgkbXEtbWluaSAtIDFweCwgMTZweCk7XG4kbXEtbWF4LW1pbmk6ICAgICAgIGVtKCRtcS1zbWFsbCAtIDFweCwgMTZweCk7XG4kbXEtbWF4LXNtYWxsOiAgICAgIGVtKCRtcS1tZWRpdW0gLSAxcHgsIDE2cHgpO1xuJG1xLW1heC1tZWRpdW06ICAgICBlbSgkbXEtbGFyZ2UgLSAxcHgsIDE2cHgpO1xuJG1xLW1heC1sYXJnZTogICAgICBlbSgkbXEteGxhcmdlIC0gMXB4LCAxNnB4KTtcbiRtcS1tYXgteGxhcmdlOiAgICAgZW0oJG1xLXh4bGFyZ2UgLSAxcHgsIDE2cHgpO1xuJG1xLW1heC14eGxhcmdlOiAgICBlbSgkbXEteHh4bGFyZ2UgLSAxcHgsIDE2cHgpO1xuXG4vLyBNZWRpYSBRdWVyeSBMaXN0IE1hcFxuJG1xOiAoXG5cdCdtaW5pJyAgICAgICAgICA6ICggbWluLXdpZHRoOiAkbXEtbWluLW1pbmkgKSxcblx0J3NtYWxsJyAgICAgICAgIDogKCBtaW4td2lkdGg6ICRtcS1taW4tc21hbGwgKSxcblx0J21lZGl1bScgICAgICAgIDogKCBtaW4td2lkdGg6ICRtcS1taW4tbWVkaXVtICksXG5cdCdsYXJnZScgICAgICAgICA6ICggbWluLXdpZHRoOiAkbXEtbWluLWxhcmdlICksXG5cdCd4bGFyZ2UnICAgICAgICA6ICggbWluLXdpZHRoOiAkbXEtbWluLXhsYXJnZSApLFxuXHQneHhsYXJnZScgICAgICAgOiAoIG1pbi13aWR0aDogJG1xLW1pbi14eGxhcmdlICksXG5cdCd4eHhsYXJnZScgICAgICA6ICggbWluLXdpZHRoOiAkbXEtbWluLXh4eGxhcmdlICksXG5cblx0J21heC10aW55JyAgICAgIDogKCBtYXgtd2lkdGg6ICRtcS1tYXgtdGlueSApLFxuXHQnbWF4LW1pbmknICAgICAgOiAoIG1heC13aWR0aDogJG1xLW1heC1taW5pICksXG5cdCdtYXgtc21hbGwnICAgICA6ICggbWF4LXdpZHRoOiAkbXEtbWF4LXNtYWxsICksXG5cdCdtYXgtbWVkaXVtJyAgICA6ICggbWF4LXdpZHRoOiAkbXEtbWF4LW1lZGl1bSApLFxuXHQnbWF4LWxhcmdlJyAgICAgOiAoIG1heC13aWR0aDogJG1xLW1heC1sYXJnZSApLFxuXHQnbWF4LXhsYXJnZScgICAgOiAoIG1heC13aWR0aDogJG1xLW1heC14bGFyZ2UgKSxcblx0J21heC14eGxhcmdlJyAgIDogKCBtYXgtd2lkdGg6ICRtcS1tYXgteHhsYXJnZSApLFxuXG5cdCdwcmludCcgICAgICAgICA6ICggcHJpbnQgKSxcblx0J3RhYi1wb3J0JyAgICAgIDogKCBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAkbXEtbWluLW1lZGl1bSkgYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAkbXEtbWF4LW1lZGl1bSkgYW5kIChvcmllbnRhdGlvbjogcG9ydHJhaXQpICksXG5cdCd0YWItbGFuZCcgICAgICA6ICggc2NyZWVuIGFuZCAobWluLWRldmljZS13aWR0aDogJG1xLW1pbi1tZWRpdW0pIGFuZCAobWF4LWRldmljZS13aWR0aDogJG1xLXRhYmxldC1sYW5kc2NhcGUpIGFuZCAob3JpZW50YXRpb246IGxhbmRzY2FwZSkgKVxuKTtcblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gWi1JbmRleFxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gaHR0cDovL3d3dy5zaXRlcG9pbnQuY29tL2JldHRlci1zb2x1dGlvbi1tYW5hZ2luZy16LWluZGV4LXNhc3MvXG4vLyBodHRwOi8vdmlnZXQuY29tL2V4dGVuZC9zYXNzLW1hcHMtYW5kLXotaW5kZXhlc1xuJHotbGF5ZXJzOiAoXG5cdCdwaXQnICAgICAgICAgOiAtMSxcblx0J2RlZmF1bHQnICAgICA6IDEsXG5cdCdmb290ZXInICAgICAgOiA1LFxuXHQnaGVhZGVyJyAgICAgIDogMTAsXG5cdCduYXYnICAgICAgICAgOiAyMCxcblx0J2Fubm91bmNlJyAgICA6IDMwLFxuXHQnbW9kYWwnICAgICAgIDogNDAsXG5cdCdvdmVybGF5JyAgICAgOiA1MFxuKTsiLCIvLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gUGxhY2Vob2xkZXIgTWl4aW5cbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbi8vZXg6IEBpbmNsdWRlIHBsYWNlaG9sZGVyKClcblxuQG1peGluIHBsYWNlaG9sZGVyIHtcblx0Jjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cblx0JjotbW96LXBsYWNlaG9sZGVyIHtcblx0XHRAY29udGVudDtcblx0fVxuXHQmOjotbW96LXBsYWNlaG9sZGVyIHtcblx0XHRAY29udGVudDtcblx0fVxuXHQmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn0iLCIvLyByZW0gU3VwcG9ydFxuLy8gPT09PT09PT09PT1cblxuLy8gcmVtXG4vLyAtLS1cbi8vIENoZWNrIGZvciBhbiBleGlzdGluZyBzdXBwb3J0IG1peGluLCBvciBvdXRwdXQgZGlyZWN0bHkuXG4vLyAtICRwcm9wICA6IDxjc3MgcHJvcGVydHk+XG4vLyAtICR2YWwgICA6IDxjc3MgdmFsdWU+XG5AbWl4aW4gc3VzeS1yZW0oXG4gICRwcm9wLFxuICAkdmFsXG4pIHtcbiAgJF9yZXFzOiAoXG4gICAgdmFyaWFibGU6IHJoeXRobS11bml0IHJlbS13aXRoLXB4LWZhbGxiYWNrLFxuICAgIG1peGluOiByZW0sXG4gICk7XG4gIEBpZiBzdXN5LXN1cHBvcnQocmVtLCAkX3JlcXMsICR3YXJuOiBmYWxzZSkgYW5kICRyaHl0aG0tdW5pdCA9PSByZW0ge1xuICAgIEBpbmNsdWRlIHJlbSgkcHJvcCwgJHZhbCk7XG4gIH0gQGVsc2Uge1xuICAgICN7JHByb3B9OiAkdmFsO1xuICB9XG59XG4iLCIvLyBDb250YWluZXIgU3ludGF4XG4vLyA9PT09PT09PT09PT09PT09XG5cbi8vIENvbnRhaW5lciBbbWl4aW5dXG4vLyAtLS0tLS0tLS0tLS0tLS0tLVxuLy8gU2V0IGEgY29udGFpbmVyIGVsZW1lbnRcbi8vIC0gWyRsYXlvdXRdICA6IDxzZXR0aW5ncz5cbkBtaXhpbiBjb250YWluZXIoXG4gICRsYXlvdXQ6ICRzdXN5XG4pIHtcbiAgJGluc3BlY3QgICAgOiAkbGF5b3V0O1xuICAkbGF5b3V0ICAgICA6IHBhcnNlLWdyaWQoJGxheW91dCk7XG5cbiAgJF93aWR0aCAgICAgOiBnZXQtY29udGFpbmVyLXdpZHRoKCRsYXlvdXQpO1xuICAkX2p1c3RpZnkgICA6IHBhcnNlLWNvbnRhaW5lci1wb3NpdGlvbihzdXN5LWdldChjb250YWluZXItcG9zaXRpb24sICRsYXlvdXQpKTtcbiAgJF9wcm9wZXJ0eSAgOiBpZihzdXN5LWdldChtYXRoLCAkbGF5b3V0KSA9PSBzdGF0aWMsIHdpZHRoLCBtYXgtd2lkdGgpO1xuXG4gICRfYm94ICAgICAgIDogc3VzeS1nZXQoYm94LXNpemluZywgJGxheW91dCk7XG5cbiAgQGlmICRfYm94IHtcbiAgICBAaW5jbHVkZSBvdXRwdXQoKGJveC1zaXppbmc6ICRfYm94KSk7XG4gIH1cblxuICBAaW5jbHVkZSBzdXN5LWluc3BlY3QoY29udGFpbmVyLCAkaW5zcGVjdCk7XG4gIEBpbmNsdWRlIGZsb2F0LWNvbnRhaW5lcigkX3dpZHRoLCAkX2p1c3RpZnksICRfcHJvcGVydHkpO1xuICBAaW5jbHVkZSBzaG93LWdyaWQoJGxheW91dCk7XG59XG5cbi8vIENvbnRhaW5lciBbZnVuY3Rpb25dXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUmV0dXJuIGNvbnRhaW5lciB3aWR0aFxuLy8gLSBbJGxheW91dF0gIDogPHNldHRpbmdzPlxuQGZ1bmN0aW9uIGNvbnRhaW5lcihcbiAgJGxheW91dDogJHN1c3lcbikge1xuICAkbGF5b3V0OiBwYXJzZS1ncmlkKCRsYXlvdXQpO1xuICBAcmV0dXJuIGdldC1jb250YWluZXItd2lkdGgoJGxheW91dCk7XG59XG5cbi8vIEdldCBDb250YWluZXIgV2lkdGhcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENhbGN1bGF0ZSB0aGUgY29udGFpbmVyIHdpZHRoXG4vLyAtIFskbGF5b3V0XTogPHNldHRpbmdzPlxuQGZ1bmN0aW9uIGdldC1jb250YWluZXItd2lkdGgoXG4gICRsYXlvdXQ6ICRzdXN5XG4pIHtcbiAgJGxheW91dCAgICAgICAgIDogcGFyc2UtZ3JpZCgkbGF5b3V0KTtcbiAgJF93aWR0aCAgICAgICAgIDogc3VzeS1nZXQoY29udGFpbmVyLCAkbGF5b3V0KTtcbiAgJF9jb2x1bW4td2lkdGggIDogc3VzeS1nZXQoY29sdW1uLXdpZHRoLCAkbGF5b3V0KTtcbiAgJF9tYXRoICAgICAgICAgIDogc3VzeS1nZXQobWF0aCwgJGxheW91dCk7XG5cbiAgQGlmIG5vdCgkX3dpZHRoKSBvciAkX3dpZHRoID09IGF1dG8ge1xuICAgIEBpZiB2YWxpZC1jb2x1bW4tbWF0aCgkX21hdGgsICRfY29sdW1uLXdpZHRoKSB7XG4gICAgICAkX2NvbHVtbnMgICA6IHN1c3ktZ2V0KGNvbHVtbnMsICRsYXlvdXQpO1xuICAgICAgJF9ndXR0ZXJzICAgOiBzdXN5LWdldChndXR0ZXJzLCAkbGF5b3V0KTtcbiAgICAgICRfc3ByZWFkICAgIDogaWYoaXMtc3BsaXQoJGxheW91dCksIHdpZGUsIG5hcnJvdyk7XG4gICAgICAkX3dpZHRoICAgICA6IHN1c3ktc3VtKCRfY29sdW1ucywgJF9ndXR0ZXJzLCAkX3NwcmVhZCkgKiAkX2NvbHVtbi13aWR0aDtcbiAgICB9IEBlbHNlIHtcbiAgICAgICRfd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG5cbiAgQHJldHVybiAkX3dpZHRoO1xufVxuXG4vLyBQYXJzZSBDb250YWluZXIgUG9zaXRpb25cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUGFyc2UgdGhlICRjb250YWluZXItcG9zaXRpb24gaW50byBtYXJnaW4gdmFsdWVzLlxuLy8gLSBbJGp1c3RpZnldICAgOiBsZWZ0IHwgY2VudGVyIHwgcmlnaHQgfCA8bGVuZ3RoPiBbPGxlbmd0aD5dXG5AZnVuY3Rpb24gcGFyc2UtY29udGFpbmVyLXBvc2l0aW9uKFxuICAkanVzdGlmeTogbWFwLWdldCgkc3VzeS1kZWZhdWx0cywgY29udGFpbmVyLXBvc2l0aW9uKVxuKSB7XG4gICRfcmV0dXJuOiBpZigkanVzdGlmeSA9PSBsZWZ0LCAwLCBhdXRvKSBpZigkanVzdGlmeSA9PSByaWdodCwgMCwgYXV0byk7XG5cbiAgQGlmIG5vdChpbmRleChsZWZ0IHJpZ2h0IGNlbnRlciwgJGp1c3RpZnkpKSB7XG4gICAgJF9yZXR1cm46IG50aCgkanVzdGlmeSwgMSk7XG4gICAgJF9yZXR1cm46ICRfcmV0dXJuIGlmKGxlbmd0aCgkanVzdGlmeSkgPiAxLCBudGgoJGp1c3RpZnksIDIpLCAkX3JldHVybik7XG4gIH1cblxuICBAcmV0dXJuICRfcmV0dXJuO1xufVxuIiwiLy8gU3VzeSBGYWxsYmFjayBDbGVhcmZpeFxuLy8gPT09PT09PT09PT09PT09PT09PT09PVxuXG5cbi8vIENsZWFyZml4XG4vLyAtLS0tLS0tLVxuLy8gQ2hlY2sgZm9yIGFuIGV4aXN0aW5nIHN1cHBvcnQgbWl4aW4sIG9yIHByb3ZpZGUgYSBzaW1wbGUgZmFsbGJhY2suXG5AbWl4aW4gc3VzeS1jbGVhcmZpeCB7XG4gIEBpZiBzdXN5LXN1cHBvcnQoY2xlYXJmaXgsIChtaXhpbjogY2xlYXJmaXgpKSB7XG4gICAgQGluY2x1ZGUgY2xlYXJmaXg7XG4gIH0gQGVsc2Uge1xuICAgICY6YWZ0ZXIge1xuICAgICAgY29udGVudDogXCIgXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbiAgfVxufVxuIiwiLy8gU3BhbiBTeW50YXhcbi8vID09PT09PT09PT09XG5cbi8vIFNwYW4gW21peGluXVxuLy8gLS0tLS0tLS0tLS0tXG4vLyBTZXQgYSBzcGFubmluZyBlbGVtZW50IHVzaW5nIHNob3J0aGFuZCBzeW50YXguXG4vLyAtICRzcGFuICA6IDxzcGFuPlxuQG1peGluIHNwYW4oXG4gICRzcGFuXG4pIHtcbiAgJGluc3BlY3Q6ICRzcGFuO1xuICAkc3BhbjogcGFyc2Utc3Bhbigkc3Bhbik7XG4gICRvdXRwdXQ6IHNwYW4tbWF0aCgkc3Bhbik7XG4gICRuZXN0aW5nOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XG4gICRjbGVhcjogc3VzeS1nZXQoY2xlYXIsICRzcGFuKTtcblxuICAkYm94OiBzdXN5LWdldChib3gtc2l6aW5nLCAkc3Bhbik7XG4gICRjb250ZW50LWJveDogaWYoc3VzeS1nZXQoZ2xvYmFsLWJveC1zaXppbmcpICE9ICdib3JkZXItYm94JywgdHJ1ZSwgZmFsc2UpO1xuICAkYm94OiAkYm94IG9yIGlmKGlzLWluc2lkZSgkc3BhbikgYW5kICRjb250ZW50LWJveCwgYm9yZGVyLWJveCwgbnVsbCk7XG5cbiAgQGlmICRjbGVhciA9PSBicmVhayB7XG4gICAgQGluY2x1ZGUgYnJlYWs7XG4gIH0gQGVsc2UgaWYgJGNsZWFyID09IG5vYnJlYWsge1xuICAgIEBpbmNsdWRlIG5vYnJlYWs7XG4gIH1cblxuICBAaW5jbHVkZSBzdXN5LWluc3BlY3Qoc3BhbiwgJGluc3BlY3QpO1xuICBAaW5jbHVkZSBvdXRwdXQoKGJveC1zaXppbmc6ICRib3gpKTtcbiAgQGluY2x1ZGUgZmxvYXQtc3Bhbi1vdXRwdXQoJG91dHB1dC4uLik7XG5cbiAgQGlmIHZhbGlkLWNvbHVtbnMoJG5lc3RpbmcsIHNpbGVudCkge1xuICAgIEBpbmNsdWRlIG5lc3RlZCgkc3BhbikgeyBAY29udGVudDsgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBTcGFuIFtmdW5jdGlvbl1cbi8vIC0tLS0tLS0tLS0tLS0tLVxuLy8gUmV0dXJuIHRoZSB3aWR0aCBvZiBhIHNwYW4uXG4vLyAtICRzcGFuICA6IDxzcGFuPlxuQGZ1bmN0aW9uIHNwYW4oXG4gICRzcGFuXG4pIHtcbiAgQHJldHVybiBnZXQtc3Bhbi13aWR0aCgkc3Bhbik7XG59XG5cbi8vIFNwYW4gTWF0aFxuLy8gLS0tLS0tLS0tXG4vLyBHZXQgYWxsIHRoZSBzcGFuIHJlc3VsdHMuXG4vLyAtICRzcGFuOiA8bWFwPlxuQGZ1bmN0aW9uIHNwYW4tbWF0aChcbiAgJHNwYW5cbikge1xuICAkbmVzdCAgICAgICAgICAgICA6IGlmKHN1c3ktZ2V0KHJvbGUsICRzcGFuKSA9PSBuZXN0LCB0cnVlLCBmYWxzZSk7XG4gICRzcGxpdC1uZXN0ICAgICAgIDogaWYoaXMtc3BsaXQoJHNwYW4pIGFuZCAkbmVzdCwgdHJ1ZSwgZmFsc2UpO1xuICAkZWRnZSAgICAgICAgICAgICA6IGdldC1lZGdlKCRzcGFuKTtcbiAgJGxvY2F0aW9uICAgICAgICAgOiBnZXQtbG9jYXRpb24oJHNwYW4pO1xuXG4gICRmbG9hdCAgICAgICAgICAgIDogZnJvbTtcbiAgJHBhZGRpbmctYmVmb3JlICAgOiBudWxsO1xuICAkcGFkZGluZy1hZnRlciAgICA6IG51bGw7XG4gICRtYXJnaW4tYmVmb3JlICAgIDogbnVsbDtcbiAgJG1hcmdpbi1hZnRlciAgICAgOiBudWxsO1xuXG4gIC8vIGNhbGN1bGF0ZSB3aWR0aHNcbiAgJHNwcmVhZDogaW5kZXgobWFwLXZhbHVlcygkc3BhbiksIHNwcmVhZCk7XG4gICRzcGFuOiBpZigkc3BsaXQtbmVzdCBhbmQgbm90KCRzcHJlYWQpLCBtYXAtbWVyZ2UoJHNwYW4sIChzcHJlYWQ6IHdpZGUpKSwgJHNwYW4pO1xuICAkd2lkdGg6IGdldC1zcGFuLXdpZHRoKCRzcGFuKTtcbiAgJGd1dHRlcnM6IGdldC1ndXR0ZXJzKCRzcGFuKTtcblxuICAvLyBhcHBseSBndXR0ZXJzXG4gIEBpZiBpcy1pbnNpZGUoJHNwYW4pIHtcbiAgICBAaWYgbm90KHN1c3ktZ2V0KHJvbGUsICRzcGFuKSkge1xuICAgICAgJHBhZGRpbmctYmVmb3JlOiBtYXAtZ2V0KCRndXR0ZXJzLCBiZWZvcmUpO1xuICAgICAgJHBhZGRpbmctYWZ0ZXI6IG1hcC1nZXQoJGd1dHRlcnMsIGFmdGVyKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBpZiBub3QoJHNwbGl0LW5lc3QpIHtcbiAgICAgICRtYXJnaW4tYmVmb3JlOiBtYXAtZ2V0KCRndXR0ZXJzLCBiZWZvcmUpO1xuICAgICAgJG1hcmdpbi1hZnRlcjogbWFwLWdldCgkZ3V0dGVycywgYWZ0ZXIpO1xuICAgIH1cbiAgfVxuXG4gIC8vIHNwZWNpYWwgbWFyZ2luIGhhbmRsaW5nXG4gIEBpZiBzdXN5LWdldChvdXRwdXQsICRzcGFuKSA9PSBpc29sYXRlIGFuZCAkbG9jYXRpb24ge1xuICAgICRtYXJnaW4tYmVmb3JlOiBnZXQtaXNvbGF0aW9uKCRzcGFuKTtcbiAgICAkbWFyZ2luLWFmdGVyOiAtMTAwJTtcbiAgfSBAZWxzZSBpZiAkZWRnZSB7XG4gICAgJGlzLXNwbGl0OiBpcy1zcGxpdCgkc3Bhbik7XG4gICAgJHBvczogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkc3Bhbik7XG5cbiAgICBAaWYgJGVkZ2UgPT0gbGFzdCB7XG4gICAgICAkZmxvYXQ6IHN1c3ktZ2V0KGxhc3QtZmxvdywgJHNwYW4pO1xuICAgIH1cblxuICAgIEBpZiBub3QoJGlzLXNwbGl0KSB7XG4gICAgICBAaWYgJGVkZ2UgPT0gZnVsbCBvciAoJGVkZ2UgPT0gZmlyc3QgYW5kICRwb3MgPT0gYmVmb3JlKSB7XG4gICAgICAgICRtYXJnaW4tYmVmb3JlOiAwO1xuICAgICAgfVxuICAgICAgQGlmICRlZGdlID09IGZ1bGwgb3IgKCRlZGdlID09IGxhc3QgYW5kICRwb3MgPT0gYWZ0ZXIpIHtcbiAgICAgICAgJG1hcmdpbi1hZnRlcjogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG4gIEByZXR1cm4gKFxuICAgIHdpZHRoICAgICAgICAgICA6ICR3aWR0aCxcbiAgICBmbG9hdCAgICAgICAgICAgOiAkZmxvYXQsXG4gICAgbWFyZ2luLWJlZm9yZSAgIDogJG1hcmdpbi1iZWZvcmUsXG4gICAgbWFyZ2luLWFmdGVyICAgIDogJG1hcmdpbi1hZnRlcixcbiAgICBwYWRkaW5nLWJlZm9yZSAgOiAkcGFkZGluZy1iZWZvcmUsXG4gICAgcGFkZGluZy1hZnRlciAgIDogJHBhZGRpbmctYWZ0ZXIsXG4gICAgZmxvdyAgICAgICAgICAgIDogc3VzeS1nZXQoZmxvdywgJHNwYW4pLFxuICApO1xufVxuXG4vLyBHZXQgU3BhbiBXaWR0aFxuLy8gLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBzcGFuIHdpZHRoLlxuLy8gLSAkc3BhbjogPG1hcD5cbkBmdW5jdGlvbiBnZXQtc3Bhbi13aWR0aChcbiAgJHNwYW5cbikge1xuICAkc3BhbiAgICAgOiBwYXJzZS1zcGFuKCRzcGFuKTtcblxuICAkbiAgICAgICAgOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XG4gICRsb2NhdGlvbiA6IGdldC1sb2NhdGlvbigkc3Bhbik7XG4gICRjb2x1bW5zICA6IHN1c3ktZ2V0KGNvbHVtbnMsICRzcGFuKTtcbiAgJGd1dHRlcnMgIDogc3VzeS1nZXQoZ3V0dGVycywgJHNwYW4pO1xuICAkc3ByZWFkICAgOiBzdXN5LWdldChzcHJlYWQsICRzcGFuKTtcblxuICAkY29udGV4dCAgOiBudWxsO1xuICAkc3Bhbi1zdW0gOiBudWxsO1xuICAkd2lkdGggICAgOiBudWxsO1xuXG4gIEBpZiAkbiA9PSAnZnVsbCcge1xuICAgICRwb3M6IHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJHNwYW4pO1xuICAgICRyb2xlOiBzdXN5LWdldChyb2xlLCAkc3Bhbik7XG4gICAgJG46IGlmKCRwb3MgPT0gc3BsaXQgYW5kICRyb2xlICE9IG5lc3QsIHN1c3ktY291bnQoJGNvbHVtbnMpLCAxMDAlKTtcbiAgfVxuXG4gIEBpZiB0eXBlLW9mKCRuKSAhPSBudW1iZXIge1xuICAgIEB3YXJuIFwiKCN7dHlwZS1vZigkbil9KSAjeyRufSBpcyBub3QgYSB2YWxpZCBzcGFuLlwiO1xuICB9IEBlbHNlIGlmIHVuaXRsZXNzKCRuKSB7XG4gICAgJGNvbnRleHQ6IHN1c3ktc3VtKCRjb2x1bW5zLCAkZ3V0dGVycywgaWYoaXMtc3BsaXQoJHNwYW4pLCB3aWRlLCBuYXJyb3cpKTtcbiAgICAkc3ByZWFkOiBpZihpcy1pbnNpZGUoJHNwYW4pLCAkc3ByZWFkIG9yIHdpZGUsICRzcHJlYWQpO1xuICAgICRzcGFuLXN1bTogc3VzeSgkbiwgJGxvY2F0aW9uLCAkY29sdW1ucywgJGd1dHRlcnMsICRzcHJlYWQpO1xuXG4gICAgJF9tYXRoOiBzdXN5LWdldChtYXRoLCAkc3Bhbik7XG4gICAgJF9jb2x1bW4td2lkdGg6IHN1c3ktZ2V0KGNvbHVtbi13aWR0aCwgJHNwYW4pO1xuICAgIEBpZiAkX21hdGggPT0gc3RhdGljIHtcbiAgICAgICR3aWR0aDogJHNwYW4tc3VtICogdmFsaWQtY29sdW1uLW1hdGgoJF9tYXRoLCAkX2NvbHVtbi13aWR0aCk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkd2lkdGg6IHBlcmNlbnRhZ2UoJHNwYW4tc3VtIC8gJGNvbnRleHQpO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgJHdpZHRoOiAkbjtcbiAgfVxuXG4gIEByZXR1cm4gJHdpZHRoO1xufVxuIiwiLy8gRGlyZWN0aW9uIEhlbHBlcnNcbi8vID09PT09PT09PT09PT09PT09XG5cbi8vIFN1c3kgRmxvdyBEZWZhdWx0c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAtIFBSSVZBVEVcbkBpbmNsdWRlIHN1c3ktZGVmYXVsdHMoKFxuICBmbG93OiBsdHIsXG4pKTtcblxuLy8gR2V0IERpcmVjdGlvblxuLy8gLS0tLS0tLS0tLS0tLVxuLy8gUmV0dXJuIHRoZSAnZnJvbScgb3IgJ3RvJyBkaXJlY3Rpb24gb2YgYSBsdHIgb3IgcnRsIGZsb3cuXG4vLyAtIFskZmxvd10gIDogbHRyIHwgcnRsXG4vLyAtIFska2V5XSAgIDogZnJvbSB8IHRvXG5AZnVuY3Rpb24gZ2V0LWRpcmVjdGlvbihcbiAgJGZsb3c6IG1hcC1nZXQoJHN1c3ktZGVmYXVsdHMsIGZsb3cpLFxuICAka2V5OiBmcm9tXG4pIHtcbiAgJHJldHVybjogaWYoJGZsb3cgPT0gcnRsLCAoZnJvbTogcmlnaHQsIHRvOiBsZWZ0KSwgKGZyb206IGxlZnQsIHRvOiByaWdodCkpO1xuICBAcmV0dXJuIG1hcC1nZXQoJHJldHVybiwgJGtleSk7XG59XG5cbi8vIFRvXG4vLyAtLVxuLy8gUmV0dXJuIHRoZSAndG8nIGRpcmVjdGlvbiBvZiBhIGZsb3dcbi8vIC0gWyRmbG93XSAgOiBsdHIgfCBydGxcbkBmdW5jdGlvbiB0byhcbiAgJGZsb3c6IG1hcC1nZXQoJHN1c3ktZGVmYXVsdHMsIGZsb3cpXG4pIHtcbiAgQHJldHVybiBnZXQtZGlyZWN0aW9uKCRmbG93LCB0byk7XG59XG5cbi8vIEZyb21cbi8vIC0tLS1cbi8vIFJldHVybiB0aGUgJ2Zyb20nIGRpcmVjdGlvbiBvZiBhIGZsb3dcbi8vIC0gWyRmbG93XSAgOiBsdHIgfCBydGxcbkBmdW5jdGlvbiBmcm9tKFxuICAkZmxvdzogbWFwLWdldCgkc3VzeS1kZWZhdWx0cywgZmxvdylcbikge1xuICBAcmV0dXJuIGdldC1kaXJlY3Rpb24oJGZsb3csIGZyb20pO1xufVxuIiwiLy8gR3V0dGVyIFN5bnRheFxuLy8gPT09PT09PT09PT09PVxuXG5cbi8vIEd1dHRlcnNcbi8vIC0tLS0tLS1cbi8vIFNldCBndXR0ZXJzIG9uIGFuIGVsZW1lbnQuXG4vLyAtIFskc3Bhbl0gICA6IDxzZXR0aW5ncz5cbkBtaXhpbiBndXR0ZXJzKFxuICAkc3BhbjogJHN1c3lcbikge1xuICAkaW5zcGVjdCAgOiAkc3BhbjtcbiAgJHNwYW4gICAgIDogcGFyc2UtZ3V0dGVycygkc3Bhbik7XG4gICRfZ3V0dGVycyA6IGdldC1ndXR0ZXJzKCRzcGFuKTtcblxuICAkX291dHB1dDogKFxuICAgIGJlZm9yZTogbWFwLWdldCgkX2d1dHRlcnMsIGJlZm9yZSksXG4gICAgYWZ0ZXI6IG1hcC1nZXQoJF9ndXR0ZXJzLCBhZnRlciksXG4gICAgZmxvdzogc3VzeS1nZXQoZmxvdywgJHNwYW4pLFxuICApO1xuXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChndXR0ZXJzLCAkaW5zcGVjdCk7XG5cbiAgQGlmIGlzLWluc2lkZSgkc3Bhbikge1xuICAgIEBpbmNsdWRlIHBhZGRpbmctb3V0cHV0KCRfb3V0cHV0Li4uKTtcbiAgfSBAZWxzZSB7XG4gICAgQGluY2x1ZGUgbWFyZ2luLW91dHB1dCgkX291dHB1dC4uLik7XG4gIH1cbn1cblxuQG1peGluIGd1dHRlcihcbiAgJHNwYW46ICRzdXN5XG4pIHtcbiAgQGluY2x1ZGUgZ3V0dGVycygkc3Bhbik7XG59XG5cblxuLy8gR3V0dGVyXG4vLyAtLS0tLS1cbi8vIFJldHVybiB0aGUgd2lkdGggb2YgYSBndXR0ZXIuXG4vLyAtIFskc3Bhbl0gICA6IDxzZXR0aW5ncz5cbkBmdW5jdGlvbiBndXR0ZXIoXG4gICRzcGFuOiAkc3VzeVxuKSB7XG4gICRzcGFuOiBwYXJzZS1ndXR0ZXJzKCRzcGFuKTtcblxuICAkX2d1dHRlcnM6IGdldC1ndXR0ZXJzKCRzcGFuKTtcbiAgJF9ndXR0ZXJzOiBtYXAtZ2V0KCRfZ3V0dGVycywgYmVmb3JlKSBvciBtYXAtZ2V0KCRfZ3V0dGVycywgYWZ0ZXIpO1xuXG4gIEByZXR1cm4gJF9ndXR0ZXJzO1xufVxuXG5AZnVuY3Rpb24gZ3V0dGVycyhcbiAgJHNwYW46ICRzdXN5XG4pIHtcbiAgQHJldHVybiBndXR0ZXIoJHNwYW4pO1xufVxuXG5cbi8vIEdldCBHdXR0ZXIgV2lkdGhcbi8vIC0tLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBndXR0ZXIgd2lkdGguXG4vLyAtIFskY29udGV4dF06IDxjb250ZXh0PlxuQGZ1bmN0aW9uIGdldC1ndXR0ZXItd2lkdGgoXG4gICRjb250ZXh0OiAkc3VzeVxuKSB7XG4gICRjb250ZXh0ICA6IHBhcnNlLWd1dHRlcnMoJGNvbnRleHQpO1xuXG4gICRfZ3V0dGVycyA6IHN1c3ktZ2V0KGd1dHRlcnMsICRjb250ZXh0KTtcbiAgJF9ndXR0ZXIgIDogc3VzeS1nZXQoZ3V0dGVyLW92ZXJyaWRlLCAkY29udGV4dCk7XG5cbiAgQGlmICRfZ3V0dGVycyBhbmQgKCRfZ3V0dGVycyA+IDApIGFuZCBub3QoJF9ndXR0ZXIpIHtcbiAgICAkX2NvbHVtbi13aWR0aDogc3VzeS1nZXQoY29sdW1uLXdpZHRoLCAkY29udGV4dCk7XG4gICAgJF9tYXRoOiBndXR0ZXItbWF0aCgkY29udGV4dCk7XG4gICAgQGlmICRfbWF0aCA9PSBzdGF0aWMge1xuICAgICAgJF9ndXR0ZXI6ICRfZ3V0dGVycyAqIHZhbGlkLWNvbHVtbi1tYXRoKCRfbWF0aCwgJF9jb2x1bW4td2lkdGgpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJF9jb2x1bW5zIDogc3VzeS1nZXQoY29sdW1ucywgJGNvbnRleHQpO1xuICAgICAgJF9zcHJlYWQgIDogaWYoaXMtc3BsaXQoJGNvbnRleHQpLCB3aWRlLCBzdXN5LWdldChzcHJlYWQsICRjb250ZXh0KSk7XG4gICAgICAkX2d1dHRlciAgOiBwZXJjZW50YWdlKCRfZ3V0dGVycyAvIHN1c3ktc3VtKCRfY29sdW1ucywgJF9ndXR0ZXJzLCAkX3NwcmVhZCkpO1xuICAgIH1cbiAgfVxuXG4gICRfZ3V0dGVyOiBpZigkX2d1dHRlciA9PSAnbm8tZ3V0dGVycycgb3IgJF9ndXR0ZXIgPT0gJ25vLWd1dHRlcicsIG51bGwsICRfZ3V0dGVyKTtcblxuICBAcmV0dXJuICRfZ3V0dGVyO1xufVxuXG5cbi8vIEdldCBHdXR0ZXJzXG4vLyAtLS0tLS0tLS0tLVxuLy8gUmV0dXJuIGJlZm9yZSBhbmQgYWZ0ZXIgZ3V0dGVyIHZhbHVlcy5cbi8vIC0gWyRjb250ZXh0XTogPGNvbnRleHQ+XG5AZnVuY3Rpb24gZ2V0LWd1dHRlcnMoXG4gICRjb250ZXh0OiAkc3VzeVxuKSB7XG4gICRjb250ZXh0ICAgICAgICAgICAgOiBwYXJzZS1ndXR0ZXJzKCRjb250ZXh0KTtcblxuICAkX2d1dHRlci1wb3NpdGlvbiAgIDogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkY29udGV4dCk7XG4gICRfZ3V0dGVyICAgICAgICAgICAgOiBnZXQtZ3V0dGVyLXdpZHRoKCRjb250ZXh0KTtcblxuICAkX3JldHVybiAgICAgICAgICAgIDogKGJlZm9yZTogbnVsbCwgYWZ0ZXI6IG51bGwpO1xuXG4gIEBpZiBpcy1zcGxpdCgkY29udGV4dCkgYW5kICRfZ3V0dGVyIHtcbiAgICAkX2d1dHRlcjogJF9ndXR0ZXIgLyAyO1xuICAgICRfcmV0dXJuOiBtYXAtbWVyZ2UoJF9yZXR1cm4sIChiZWZvcmU6ICRfZ3V0dGVyLCBhZnRlcjogJF9ndXR0ZXIpKTtcbiAgfSBAZWxzZSB7XG4gICAgJF9yZXR1cm46IG1hcC1tZXJnZSgkX3JldHVybiwgKCRfZ3V0dGVyLXBvc2l0aW9uOiAkX2d1dHRlcikpO1xuICB9XG5cbiAgQHJldHVybiAkX3JldHVybjtcbn1cblxuXG4vLyBJcyBJbnNpZGVcbi8vIC0tLS0tLS0tLVxuLy8gUmV0dXJucyB0cnVlIGlmIGd1dHRlcnMgYXJlIGluc2lkZS5cbi8vICRjb250ZXh0OiA8Y29udGV4dD5cbkBmdW5jdGlvbiBpcy1pbnNpZGUoXG4gICRjb250ZXh0XG4pIHtcbiAgJF9pbnNpZGU6IGluc2lkZSBpbnNpZGUtc3RhdGljO1xuICAkX2d1dHRlci1wb3NpdGlvbjogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkY29udGV4dCk7XG5cbiAgQHJldHVybiBpZihpbmRleCgkX2luc2lkZSwgJF9ndXR0ZXItcG9zaXRpb24pLCB0cnVlLCBmYWxzZSk7XG59XG5cblxuLy8gSXMgU3BsaXRcbi8vIC0tLS0tLS0tXG4vLyBSZXR1cm5zIHRydWUgaWYgZ3V0dGVycyBhcmUgc3BsaXQuXG4vLyAkY29udGV4dDogPGNvbnRleHQ+XG5AZnVuY3Rpb24gaXMtc3BsaXQoXG4gICRjb250ZXh0XG4pIHtcbiAgJF9zcGxpdDogc3BsaXQgaW5zaWRlIGluc2lkZS1zdGF0aWM7XG4gICRfZ3V0dGVyLXBvc2l0aW9uOiBzdXN5LWdldChndXR0ZXItcG9zaXRpb24sICRjb250ZXh0KTtcblxuICBAcmV0dXJuIGlmKGluZGV4KCRfc3BsaXQsICRfZ3V0dGVyLXBvc2l0aW9uKSwgdHJ1ZSwgZmFsc2UpO1xufVxuXG5cbi8vIEd1dHRlciBNYXRoXG4vLyAtLS0tLS0tLS0tLVxuLy8gUmV0dXJuIHRoZSBtYXRoIHRvIHVzZSBmb3IgZ3V0dGVyIGNhbGN1bGF0aW9uc1xuLy8gJGNvbnRleHQ6IDxjb250ZXh0PlxuQGZ1bmN0aW9uIGd1dHRlci1tYXRoKFxuICAkY29udGV4dDogJHN1c3lcbikge1xuICAkX3JldHVybiAgOiBzdXN5LWdldChtYXRoLCAkY29udGV4dCk7XG4gICRfcmV0dXJuICA6IGlmKHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJGNvbnRleHQpID09IGluc2lkZS1zdGF0aWMsIHN0YXRpYywgJF9yZXR1cm4pO1xuXG4gIEByZXR1cm4gJF9yZXR1cm47XG59XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0= */
